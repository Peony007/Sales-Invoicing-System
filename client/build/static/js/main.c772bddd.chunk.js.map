{"version":3,"sources":["fonts/Microsoft Sans Serif.ttf","components/Guest/ChairInvoice.js","components/Guest/Invoice.js","services/auth.service.js","components/Guest/SignIn.js","components/Common/AppHeader/index.js","components/Common/Sidebar/FixedSidebar.js","components/Common/Sidebar/CollapsedSidebar.js","components/Common/DataGrid/index.js","components/Admin/Users.js","components/Admin/Chair/Brand.js","components/Admin/Chair/Model.js","components/Admin/Chair/Order.js","components/Admin/Chair/Stock.js","components/Admin/Desk/Model.js","components/Admin/Desk/Order.js","components/Admin/Desk/Stock.js","components/Admin/Color.js","components/Admin/index.js","components/Standard/Chair/Order.js","components/Standard/Desk/Order.js","components/Standard/index.js","components/Common/Routes/AdminRoute.js","components/Common/Routes/GuestRoute.js","components/Common/Routes/PrivateRoute.js","store/slice/auth.slice.js","store/slice/counter.slice.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","title","fontFamily","fontSize","marginBottom","fontWeight","detail","lineHeight","info","flexDirection","companyInfo","width","paddingRight","clientInfo","email","color","textDecoration","subtitle","margin","text","textAlign","table","border","tableRow","borderBottom","minHeight","tableColumn","flex","padding","borderRight","header","pageNumber","position","bottom","left","right","Font","register","family","src","microsoft_sans_serif","useState","loading","setLoading","success","setSuccess","order","setOrder","id","useParams","useEffect","source","axios","CancelToken","getOrder","cancelToken","token","cancel","get","then","response","data","console","log","catch","error","Backdrop","sx","zIndex","theme","drawer","open","CircularProgress","height","style","wrap","fixed","clientName","clientUnit","clientFloor","clientBlock","clientStreet","clientDistrict","clientPhone","cells","content","backgroundColor","textTransform","deliveryDate","map","rowIndex","rowArr","rowRestProps","length","index","cellArr","cellRestProps","flexBasis","maxWidth","QTY","render","totalPages","Warning","Typography","styled","TableCell","tableCellClasses","head","WebkitPrintColorAdjust","makeStyles","root","size","tableContainer","marginTop","borderCollapse","logout","dispatch","defaults","headers","common","type","Copyright","props","variant","align","Link","href","Date","getFullYear","SignIn","connect","state","auth","login","Promise","resolve","reject","post","isAdmin","payload","Box","display","alignItems","Avatar","m","bgcolor","component","onSubmit","event","preventDefault","form","currentTarget","FormData","password","err","value","Swal","fire","icon","message","allowOutsideClick","noValidate","mt","TextField","required","fullWidth","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","mb","Grid","container","item","xs","drawerHeight","handleDrawerToggle","AppBar","maxHeight","Toolbar","IconButton","edge","onClick","mr","sm","Menu","noWrap","useFixedSidebarStyles","boxSizing","drawerWidth","navlink","transition","minWidth","FixedSidebar","handleLogout","lists","classes","expList","setExpList","expIndex","setExpIndex","className","list","listIndex","List","category","pl","listitem","itemIndex","children","ListItem","button","secondaryAction","ExpandMore","transform","ListItemIcon","ListItemText","primary","Collapse","in","disablePadding","child","childIndex","to","path","exact","activeClassName","Divider","Logout","handleDrawerClose","mobileOpen","Drawer","onClose","ModalProps","keepMounted","PaperProps","e","descendingComparator","a","b","orderBy","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","EnhancedTableHead","columns","actionSpan","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","indeterminate","checked","onChange","inputProps","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","colSpan","EnhancedTableToolbar","onBulkRemoveClick","onFilterClick","pr","alpha","palette","main","action","activatedOpacity","Tooltip","Delete","DataGrid","rows","onEditClick","onRemoveClick","extraLinks","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","prevRows","useRef","current","filter","row","emptyRows","Math","max","Paper","TableContainer","Table","target","newSelecteds","n","TableBody","slice","isItemSelected","indexOf","labelId","hover","role","tabIndex","selectedIndex","newSelected","concat","handleClick","field","filedIndex","scope","Edit","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","numeric","Users","users","setUsers","setOpen","setEmail","firstName","setFirstName","lastName","setLastName","passport","setPassport","selfie","setSelfie","passportNo","selfieUrl","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Brand","brands","setBrands","editOpen","setEditOpen","createOpen","setCreateOpen","setID","setName","getBrands","startIcon","Add","restProps","showCancelButton","confirmButtonText","cancelButtonText","result","isConfirmed","delete","ids","put","Model","models","setModels","getModels","useTheme","orders","setOrders","whatsAppOpen","setWhatsAppOpen","emailOpen","setEmailOpen","whatsAppMessage","emailContent","filterAnchor","setFilterAnchor","colors","setColors","chairRemarks","filterBrand","setFilterBrand","filterModel","setFilterModel","filterFrameColor","setFilterFrameColor","filterSeatColor","setFilterSeatColor","filterBackColor","setFilterBackColor","setClientName","clientEmail","setClientEmail","setClientPhone","setClientDistrict","setClientStreet","setClientBlock","setClientFloor","setClientUnit","setDeliveryDate","remark","setRemark","brand","setBrand","model","setModel","frameColor","setFrameColor","backColor","setBackColor","seatColor","setSeatColor","withHeadrest","setWithHeadrest","withAdArmrest","setWithAdArmrest","chairRemark","setChairRemark","setQTY","PictureAsPdf","Email","html","ReactDOMServer","renderToStaticMarkup","qrcode","level","qrerror","WhatsApp","getOrders","getColors","getChairRemarks","now","setMinutes","getMinutes","getTimezoneOffset","toISOString","split","salesman","createdAt","salesmanName","orderDate","createdTime","clientAddress","join","key","stock","chairBrand","toLowerCase","includes","chairModel","clientRemark","Popper","anchorEl","Boolean","placement","disablePortal","TransitionProps","Fade","timeout","p","flexWrap","justifyContent","values","setValue","fullScreen","useMediaQuery","breakpoints","down","Stack","spacing","Autocomplete","newValue","options","getOptionLabel","option","renderInput","params","freeSolo","InputLabelProps","shrink","defaultCountry","chairBrandId","chairModelId","frameColorId","backColorId","seatColorId","InputProps","readOnly","inputRef","defaultValue","multiline","minRows","maxRows","phone","Stock","stocks","setStocks","getStocks","deskRemarks","setColor","armSize","setArmSize","feetSize","setFeetSize","beam","setBeam","akInfo","setAkInfo","woodInfo_1","setWoodInfo_1","woodInfo_2","setWoodInfo_2","melamineInfo","setMelamineInfo","laminateInfo","setLaminateInfo","bambooInfo","setBambooInfo","deskRemark","setDeskRemark","getDeskRemarks","deskModel","deskModelId","colorId","filterColor","setFilterColor","filterBeam","setFilterBeam","filterAKInfo","setFilterAKInfo","filterWoodInfo_1","setFilterWoodInfo_1","filterWoodInfo_2","setFilterWoodInfo_2","filterMelamineInfo","setFilterMelamineInfo","filterLaminateInfo","setFilterLaminateInfo","filterBambooInfo","setFilterBambooInfo","menuLists","BlurOn","Storefront","BookOnline","ColorLens","setMobileOpen","useRouteMatch","CollapsedSidebar","flexGrow","ChairBrand","ChairModel","ChairOrder","ChairStock","DeskModel","DeskOrder","DeskStock","Color","Component","rest","isLoggedIn","createSlice","initialState","reducers","loginSuccess","loginFail","actions","counter","increment","decrement","incrementByAmount","reducer","combineReducers","preloadedState","localStorage","getItem","JSON","parse","store","configureStore","subscribe","setItem","stringify","getState","baseURL","createTheme","App","ThemeProvider","CssBaseline","Container","disableGutters","overflow","ChairInvoice","Admin","Standard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c772bddd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Microsoft Sans Serif.8832b59d.ttf\";","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Document,\r\n  Font,\r\n  Page,\r\n  PDFViewer,\r\n  Text,\r\n  Image,\r\n  StyleSheet,\r\n  View,\r\n  Tspan,\r\n} from '@react-pdf/renderer';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport { Warning as WarningIcon } from '@mui/icons-material';\r\n\r\nimport microsoft_sans_serif from 'fonts/Microsoft Sans Serif.ttf';\r\nimport { Backdrop, CircularProgress, Typography } from '@mui/material';\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontFamily: 'Microsoft Sans Serif',\r\n    fontSize: 40,\r\n    marginBottom: 10,\r\n    fontWeight: 'bold',\r\n  },\r\n  detail: {\r\n    fontFamily: 'Microsoft Sans Serif',\r\n    fontSize: 8,\r\n    lineHeight: 1.2,\r\n    marginBottom: 10,\r\n  },\r\n  info: {\r\n    flexDirection: 'row',\r\n    marginBottom: 10,\r\n  },\r\n  companyInfo: {\r\n    fontFamily: 'Microsoft Sans Serif',\r\n    fontSize: 8,\r\n    width: 200,\r\n    paddingRight: 10,\r\n    lineHeight: 1.2,\r\n  },\r\n  clientInfo: {\r\n    fontFamily: 'Microsoft Sans Serif',\r\n    fontSize: 8,\r\n    width: 200,\r\n    paddingRight: 10,\r\n    lineHeight: 1.2,\r\n  },\r\n  email: {\r\n    color: '#0000ff',\r\n    textDecoration: 'underline',\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    margin: 12,\r\n    fontWeight: 100,\r\n    fontFamily: 'Microsoft Sans Serif',\r\n  },\r\n  text: {\r\n    margin: 12,\r\n    fontSize: 14,\r\n    textAlign: 'justify',\r\n    fontFamily: 'Times-Roman',\r\n  },\r\n  table: {\r\n    fontSize: 8,\r\n    marginBottom: 10,\r\n    border: '0.5px solid #808080',\r\n  },\r\n  tableRow: {\r\n    fontSize: 8,\r\n    borderBottom: '0.5px solid #808080',\r\n    flexDirection: 'row',\r\n    minHeight: 15,\r\n  },\r\n  tableColumn: {\r\n    flex: 1,\r\n    padding: '3px 5px',\r\n    borderRight: '0.5px solid #808080',\r\n  },\r\n  header: {\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n  pageNumber: {\r\n    position: 'absolute',\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n});\r\n\r\nFont.register({\r\n  family: 'Microsoft Sans Serif',\r\n  src: microsoft_sans_serif,\r\n});\r\n\r\nexport default () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [success, setSuccess] = useState(false);\r\n  const [order, setOrder] = useState({});\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    getOrder({ id, cancelToken: source.token });\r\n    return () => source.cancel('Brand Component got unmounted');\r\n  }, [id]);\r\n\r\n  const getOrder = ({ id, cancelToken }) => {\r\n    axios\r\n      .get(`/chairorder/${id}`, { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setSuccess(true);\r\n        setOrder(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setSuccess(false);\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return loading ? (\r\n    <Backdrop\r\n      sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n      open={true}\r\n    >\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  ) : success ? (\r\n    <PDFViewer height=\"100%\">\r\n      <Document>\r\n        <Page style={styles.body} wrap>\r\n          <Text style={styles.header} fixed>\r\n            Chair Invoice\r\n          </Text>\r\n          <Text style={styles.title}>Invoice</Text>\r\n          <View style={styles.detail}>\r\n            <Text>No: 20211127</Text>\r\n            <Text>Date: October 15, 2021</Text>\r\n            <Text>PO No: 9500011259</Text>\r\n          </View>\r\n          <View style={styles.info}>\r\n            <View style={styles.companyInfo}>\r\n              <Text>Blueocean Int’l (HK) Ltd</Text>\r\n              <Text>19/F</Text>\r\n              <Text>Bel Trade Commercial Building</Text>\r\n              <Text>3 Burrows Street</Text>\r\n              <Text>Wanchai, Hong Kong</Text>\r\n              <Text>Tel: 2169 3337</Text>\r\n              <Text>\r\n                Email: <Tspan style={styles.email}>info@ergoseatings.com</Tspan>\r\n              </Text>\r\n            </View>\r\n            <View style={styles.clientInfo}>\r\n              <Text>Client's Name: {order.clientName}</Text>\r\n              <Text>{order.clientUnit}</Text>\r\n              <Text>{order.clientFloor}</Text>\r\n              <Text>{order.clientBlock}</Text>\r\n              <Text>{order.clientStreet}</Text>\r\n              <Text>{order.clientDistrict}</Text>\r\n              <Text>Phone: {order.clientPhone}</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.table}>\r\n            {[\r\n              {\r\n                cells: [\r\n                  { content: 'Salesperson', width: '15%' },\r\n                  { content: 'Delivery Date', width: '55%' },\r\n                  { content: 'Payment Terms', width: '15%' },\r\n                  { content: 'Due Date', width: '15%' },\r\n                ],\r\n                backgroundColor: '#dbe5f1',\r\n                textTransform: 'uppercase',\r\n              },\r\n              {\r\n                cells: [\r\n                  { content: 'QTY', width: '15%' },\r\n                  { content: order.deliveryDate, width: '55%' },\r\n                  { content: '', width: '15%' },\r\n                  { content: order.deliveryDate, width: '15%' },\r\n                ],\r\n              },\r\n            ].map(({ cells, ...rowRestProps }, rowIndex, rowArr) => (\r\n              <View\r\n                key={rowIndex}\r\n                style={[\r\n                  styles.tableRow,\r\n                  {\r\n                    borderBottom:\r\n                      rowIndex === rowArr.length - 1 ? 'none' : null,\r\n                    ...rowRestProps,\r\n                  },\r\n                ]}\r\n              >\r\n                {cells.map(\r\n                  ({ content, width, cellRestProps }, index, cellArr) => (\r\n                    <Text\r\n                      key={index}\r\n                      style={[\r\n                        styles.tableColumn,\r\n                        {\r\n                          borderRight:\r\n                            index === cellArr.length - 1 ? 'none' : null,\r\n                          flexBasis: width,\r\n                          maxWidth: width,\r\n                          ...cellRestProps,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      {content}\r\n                    </Text>\r\n                  )\r\n                )}\r\n              </View>\r\n            ))}\r\n          </View>\r\n          <View style={styles.table}>\r\n            {[\r\n              {\r\n                cells: [\r\n                  { content: 'QTY', width: '15%' },\r\n                  { content: 'Description', width: '55%' },\r\n                  { content: 'Unit Price', width: '15%' },\r\n                  { content: 'Line Total (HKD)', width: '15%' },\r\n                ],\r\n                backgroundColor: '#dbe5f1',\r\n                textTransform: 'uppercase',\r\n              },\r\n              {\r\n                cells: [\r\n                  { content: order.QTY, width: '15%' },\r\n                  { content: '', width: '55%' },\r\n                  { content: '', width: '15%' },\r\n                  { content: '', width: '15%' },\r\n                ],\r\n              },\r\n              {\r\n                cells: [\r\n                  { content: '', width: '15%' },\r\n                  { content: '', width: '55%' },\r\n                  { content: '', width: '15%' },\r\n                  { content: '', width: '15%' },\r\n                ],\r\n              },\r\n              {\r\n                cells: [\r\n                  { content: '', width: '15%' },\r\n                  { content: '', width: '55%' },\r\n                  { content: '', width: '15%' },\r\n                  { content: '', width: '15%' },\r\n                ],\r\n              },\r\n              {\r\n                cells: [\r\n                  { content: '', width: '15%' },\r\n                  { content: '', width: '55%' },\r\n                  { content: '', width: '15%' },\r\n                  { content: '', width: '15%' },\r\n                ],\r\n              },\r\n              {\r\n                cells: [\r\n                  { content: '', width: '15%' },\r\n                  { content: '', width: '55%' },\r\n                  { content: '', width: '15%' },\r\n                  { content: '', width: '15%' },\r\n                ],\r\n              },\r\n              {\r\n                cells: [\r\n                  {\r\n                    content: ``,\r\n                    width: '70%',\r\n                    fontSize: 12,\r\n                  },\r\n                  { content: 'SUBTOTAL', width: '15%' },\r\n                  {\r\n                    content: '5500',\r\n                    width: '15%',\r\n                    borderBottom: '0.5px solid #808080',\r\n                  },\r\n                ],\r\n                borderBottom: 'none',\r\n              },\r\n              {\r\n                cells: [\r\n                  {\r\n                    content: ``,\r\n                    width: '70%',\r\n                    fontSize: 12,\r\n                  },\r\n                  { content: 'SALES TAX', width: '15%' },\r\n                  {\r\n                    content: '5500',\r\n                    width: '15%',\r\n                    borderBottom: '0.5px solid #808080',\r\n                  },\r\n                ],\r\n                borderBottom: 'none',\r\n              },\r\n              {\r\n                cells: [\r\n                  {\r\n                    content: ``,\r\n                    width: '70%',\r\n                    fontSize: 12,\r\n                  },\r\n                  { content: 'TOTAL', width: '15%' },\r\n                  {\r\n                    content: '5500',\r\n                    width: '15%',\r\n                  },\r\n                ],\r\n              },\r\n            ].map(({ cells, ...rowRestProps }, rowIndex, rowArr) => (\r\n              <View\r\n                key={rowIndex}\r\n                style={[\r\n                  styles.tableRow,\r\n                  {\r\n                    borderBottom:\r\n                      rowIndex === rowArr.length - 1 ? 'none' : null,\r\n                    ...rowRestProps,\r\n                  },\r\n                ]}\r\n              >\r\n                {cells.map(\r\n                  ({ content, width, ...cellRestProps }, index, cellArr) => (\r\n                    <Text\r\n                      key={index}\r\n                      style={[\r\n                        styles.tableColumn,\r\n                        {\r\n                          borderRight:\r\n                            index === cellArr.length - 1 ? 'none' : null,\r\n                          flexBasis: width,\r\n                          maxWidth: width,\r\n                          ...cellRestProps,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      {content}\r\n                    </Text>\r\n                  )\r\n                )}\r\n              </View>\r\n            ))}\r\n            <Text\r\n              style={{\r\n                fontSize: 12,\r\n                padding: 3,\r\n                position: 'absolute',\r\n                width: '70%',\r\n                bottom: 0,\r\n                left: 0,\r\n              }}\r\n            >\r\n              NOTE: Please deposit to HSBC 023-472038-838 (bank code: 004, Bank\r\n              address: 1 Queen's Road Central, Hong Kong. SWIFT code:\r\n              HSBCHKHHHKH or FPS: info@ergoseatings.com\r\n            </Text>\r\n          </View>\r\n          <Text\r\n            style={styles.pageNumber}\r\n            render={({ pageNumber, totalPages }) =>\r\n              `${pageNumber} / ${totalPages}`\r\n            }\r\n            fixed\r\n          />\r\n        </Page>\r\n      </Document>\r\n    </PDFViewer>\r\n  ) : (\r\n    <Backdrop\r\n      sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n      open={true}\r\n    >\r\n      <WarningIcon />\r\n      <Typography>This url is not a valid invoice url.</Typography>\r\n    </Backdrop>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Link,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  tableCellClasses,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { CheckBoxOutlineBlank as CheckBoxOutlineBlankIcon } from '@mui/icons-material';\r\n\r\nconst details = [\r\n  'Should the delivery of goods involved any staircases at the provided location, there will be an additional delivery fee of HK$100 per level to be charged in advance.',\r\n  'If you have special assembling requirements, please let us know prior to delivery.  Otherwise, all chairs will be assembled before delivery and all desks will be assembled on site.',\r\n  'If the delivery address is located in a remote area within Hong Kong, we reserve the rights to charge the client extra for delivery charges.  In such cases, we will provide a quotation upon investigation of the detailed address.  Client will be notified of such extra cost prior to delivery.',\r\n  'Delivery date for pre-orders stated above is an estimate only. While we will try our best to deliver the products as soon as possible, the actual delivery date may be adjusted depending on actual freight schedule. We do NOT accept refund in case of delay arising from delivery delay.',\r\n  'You understand that pre-orders are non-refundable.  Decision to switch to another product after purchase can only be treated as store credits. ',\r\n];\r\n\r\nconst StyledTableCell = styled(TableCell)(() => ({\r\n  padding: '5px 10px',\r\n  [`&.${tableCellClasses.head}`]: {\r\n    '@media print': {\r\n      backgroundColor: '#dbe5f1',\r\n      WebkitPrintColorAdjust: 'exact',\r\n    },\r\n    backgroundColor: '#dbe5f1',\r\n    color: '#000000',\r\n    textTransform: 'uppercase',\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst useInvoiceStyles = makeStyles({\r\n  root: {\r\n    '@media print': {\r\n      size: 'A4 portrait',\r\n    },\r\n    padding: 10,\r\n    '& *': {\r\n      fontFamily: 'Microsoft Sans Serif',\r\n    },\r\n  },\r\n  title: {\r\n    fontSize: 40,\r\n    fontWeight: 'bold',\r\n  },\r\n  tableContainer: {\r\n    marginTop: 10,\r\n    '& table': {\r\n      borderCollapse: 'collapse',\r\n      '& th, & tr, & td': {\r\n        border: '.5px solid #000000',\r\n      },\r\n    },\r\n  },\r\n  detail: {\r\n    color: '#808080',\r\n  },\r\n});\r\n\r\nexport default () => {\r\n  const classes = useInvoiceStyles();\r\n  const printDocument = () => {\r\n    // const input = document.getElementById('divToPrint');\r\n    // html2canvas(input).then((canvas) => {\r\n    //   const imgData = canvas.toDataURL('image/png');\r\n    //   const pdf = new jsPDF();\r\n    //   pdf.addImage(imgData, 'JPEG', 0, 0);\r\n    //   // pdf.output('dataurlnewwindow');\r\n    //   pdf.save('download.pdf');\r\n    // });\r\n  };\r\n\r\n  return (\r\n    <Box id=\"divToPrint\" className={classes.root}>\r\n      <Typography className={classes.title}>Invoice</Typography>\r\n      <Typography>Date: October 15, 2021</Typography>\r\n      <Typography>No: 20211127</Typography>\r\n      <Typography>PO No: 9500011259</Typography>\r\n      <Typography>\r\n        Blueocean Int’l (HK) Ltd 19/F Bel Trade Commercial Building 3 Burrows\r\n        Street Wanchai, Hong Kong Tel: 2169 3337\r\n      </Typography>\r\n      <Typography>Client's Info</Typography>\r\n      <TableContainer className={classes.tableContainer}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Salesperson</StyledTableCell>\r\n              <StyledTableCell>Delivery Date</StyledTableCell>\r\n              <StyledTableCell>Payment Terms</StyledTableCell>\r\n              <StyledTableCell>Due Date</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <StyledTableCell>Andy</StyledTableCell>\r\n              <StyledTableCell>\r\n                Est 2-3 Working days after payment received\r\n              </StyledTableCell>\r\n              <StyledTableCell>100% Bank transfer</StyledTableCell>\r\n              <StyledTableCell>Oct 22, 2021</StyledTableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TableContainer className={classes.tableContainer}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>QTY</StyledTableCell>\r\n              <StyledTableCell>DESCRIPTION</StyledTableCell>\r\n              <StyledTableCell>UNIT PRICE</StyledTableCell>\r\n              <StyledTableCell>LINE TOTAL (HKD)</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <StyledTableCell>1</StyledTableCell>\r\n              <StyledTableCell>\r\n                Duorest A80H with headrest, upholstered back and mesh seat,\r\n                color: black, with delivery and installation included\r\n              </StyledTableCell>\r\n              <StyledTableCell>5500</StyledTableCell>\r\n              <StyledTableCell>5500</StyledTableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <StyledTableCell colSpan={2} rowSpan={3}>\r\n                NOTE: Please deposit to HSBC 023-472038-838 (bank code: 004,\r\n                Bank address: 1 Queen's Road Central, Hong Kong. SWIFT code:\r\n                HSBCHKHHHKH or FPS: info@ergoseatings.com\r\n              </StyledTableCell>\r\n              <StyledTableCell>SUBTOTAL</StyledTableCell>\r\n              <StyledTableCell>5500</StyledTableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <StyledTableCell>SUBTOTAL</StyledTableCell>\r\n              <StyledTableCell>5500</StyledTableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <StyledTableCell>SUBTOTAL</StyledTableCell>\r\n              <StyledTableCell>5500</StyledTableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <List dense>\r\n        {details.map((item, index) => (\r\n          <ListItem key={index} className={classes.detail}>\r\n            <ListItemIcon>\r\n              <CheckBoxOutlineBlankIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={item} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <List subheader={<ListSubheader>Settings</ListSubheader>}>\r\n        {details.map((item, index) => (\r\n          <ListItem key={index} className={classes.detail}>\r\n            <ListItemIcon>\r\n              <CheckBoxOutlineBlankIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={item} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const login = (data) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post('/user/login', data)\r\n      .then((response) => {\r\n        // handle success\r\n        const { token, type } = response.data;\r\n        const isAdmin = type === 'admin' ? true : false;\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        dispatch({ type: 'auth/loginSuccess', payload: { token, isAdmin } });\r\n        resolve();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        reject(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  });\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  delete axios.defaults.headers.common['Authorization'];\r\n  dispatch({ type: 'auth/logout' });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { login } from 'services/auth.service';\r\n\r\nfunction mapStateToProps(state) {\r\n  const { auth } = state;\r\n  return { auth };\r\n}\r\n\r\nconst Copyright = (props) => {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n};\r\n\r\n// \"email\": \"admin@admin.com\",\r\n// \"password\": \"admin41@\"\r\n\r\nconst SignIn = connect(mapStateToProps, { login })((props) => {\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    const data = new FormData(form);\r\n    props\r\n      .login({\r\n        email: data.get('email'),\r\n        password: data.get('password'),\r\n      })\r\n      .then()\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        form.password.value = '';\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Login Failure',\r\n          text: err.response.data.message,\r\n          allowOutsideClick: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n      <Copyright sx={{ mt: 8, mb: 4 }} />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport { AppBar, IconButton, Toolbar, Typography } from '@mui/material';\r\nimport { Menu as MenuIcon } from '@mui/icons-material';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AppHeader = ({\r\n  component: Component,\r\n  auth,\r\n  drawerHeight,\r\n  handleDrawerToggle,\r\n  title,\r\n  ...rest\r\n}) => (\r\n  <AppBar\r\n    position=\"static\"\r\n    sx={{\r\n      backgroundColor: '#5664d2',\r\n      flexBasis: `${drawerHeight}px`,\r\n      maxHeight: `${drawerHeight}px`,\r\n    }}\r\n  >\r\n    <Toolbar variant=\"dense\">\r\n      <IconButton\r\n        color=\"inherit\"\r\n        aria-label=\"open drawer\"\r\n        edge=\"start\"\r\n        onClick={handleDrawerToggle}\r\n        sx={{ mr: 2, display: { sm: 'none' } }}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Typography variant=\"h6\" noWrap component=\"div\">\r\n        {title}\r\n      </Typography>\r\n    </Toolbar>\r\n  </AppBar>\r\n);\r\n\r\nAppHeader.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  drawerHeight: PropTypes.number.isRequired,\r\n  handleDrawerToggle: PropTypes.func.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppHeader);\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport {\r\n  Logout as LogoutIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from '@mui/icons-material';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useFixedSidebarStyles = makeStyles({\r\n  root: {\r\n    boxSizing: 'border-box',\r\n    paddingTop: '10px',\r\n    width: (props) => props.drawerWidth,\r\n    backgroundColor: '#fff',\r\n    borderRight: '1px solid rgba(0, 0, 0, 0.12)',\r\n    '& a': {\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n  navlink: {\r\n    color: '#6b778c',\r\n    '&:hover': {\r\n      // backgroundColor: '#5664d20a',\r\n    },\r\n    transition: 'background-color ease .5s',\r\n\r\n    '& .MuiListItemIcon-root': {\r\n      minWidth: '40px',\r\n    },\r\n    '& .MuiListItemIcon-root, & .MuiListItemText-root': {\r\n      '.active &': {\r\n        color: '#5664d2',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst FixedSidebar = ({ drawerWidth, handleLogout, lists }) => {\r\n  const classes = useFixedSidebarStyles({ drawerWidth });\r\n  const [expList, setExpList] = useState(-1);\r\n  const [expIndex, setExpIndex] = useState(-1);\r\n\r\n  return (\r\n    <Box\r\n      className={classes.root}\r\n      sx={{\r\n        display: { xs: 'none', sm: 'block' },\r\n      }}\r\n    >\r\n      {lists.map((list, listIndex) => [\r\n        <List key={`list-${listIndex}`}>\r\n          {list.category ? (\r\n            <Typography variant=\"h6\" sx={{ pl: '10px' }}>\r\n              {list.category}\r\n            </Typography>\r\n          ) : null}\r\n          {list.content.map((listitem, itemIndex) =>\r\n            listitem.children ? (\r\n              [\r\n                <ListItem\r\n                  key={`listitem-${itemIndex}`}\r\n                  button\r\n                  className={classes.navlink}\r\n                  onClick={() => {\r\n                    if (expIndex === itemIndex && expList === listIndex) {\r\n                      setExpIndex(-1);\r\n                      setExpList(-1);\r\n                    } else {\r\n                      setExpIndex(itemIndex);\r\n                      setExpList(listIndex);\r\n                    }\r\n                  }}\r\n                  secondaryAction={\r\n                    <ExpandMoreIcon\r\n                      sx={{\r\n                        transition: 'transform ease .3s',\r\n                        transform:\r\n                          expIndex === itemIndex && expList === listIndex\r\n                            ? ''\r\n                            : 'Rotate(-90deg)',\r\n                      }}\r\n                    />\r\n                  }\r\n                >\r\n                  <ListItemIcon>{listitem.icon}</ListItemIcon>\r\n                  <ListItemText primary={listitem.label} />\r\n                </ListItem>,\r\n                <Collapse\r\n                  key={`listcollapse-${itemIndex}`}\r\n                  in={expIndex === itemIndex && expList === listIndex}\r\n                >\r\n                  <List disablePadding>\r\n                    {listitem.children.map((child, childIndex) => (\r\n                      <NavLink\r\n                        key={childIndex}\r\n                        to={child.path}\r\n                        exact\r\n                        activeClassName=\"active\"\r\n                      >\r\n                        <ListItem button className={classes.navlink}>\r\n                          <ListItemIcon>{null}</ListItemIcon>\r\n                          <ListItemText primary={child.label} />\r\n                        </ListItem>\r\n                      </NavLink>\r\n                    ))}\r\n                  </List>\r\n                </Collapse>,\r\n              ]\r\n            ) : (\r\n              <NavLink\r\n                key={`listitem-${itemIndex}`}\r\n                to={listitem.path}\r\n                exact\r\n                activeClassName=\"active\"\r\n              >\r\n                <ListItem button className={classes.navlink}>\r\n                  <ListItemIcon>{listitem.icon}</ListItemIcon>\r\n                  <ListItemText primary={listitem.label} />\r\n                </ListItem>\r\n              </NavLink>\r\n            )\r\n          )}\r\n        </List>,\r\n        <Divider key={`listdivider-${listIndex}`} />,\r\n      ])}\r\n      <List>\r\n        <ListItem button className={classes.navlink} onClick={handleLogout}>\r\n          <ListItemIcon>\r\n            <LogoutIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Logout\" />\r\n        </ListItem>\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nFixedSidebar.propTypes = {\r\n  drawerWidth: PropTypes.number.isRequired,\r\n  handleLogout: PropTypes.func.isRequired,\r\n  lists: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FixedSidebar;\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport {\r\n  Logout as LogoutIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from '@mui/icons-material';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useFixedSidebarStyles = makeStyles({\r\n  root: {\r\n    boxSizing: 'border-box',\r\n    paddingTop: '10px',\r\n    width: (props) => props.drawerWidth,\r\n    backgroundColor: '#fff',\r\n    borderRight: '1px solid rgba(0, 0, 0, 0.12)',\r\n    '& a': {\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n  navlink: {\r\n    color: '#6b778c',\r\n    '&:hover': {\r\n      // backgroundColor: '#5664d20a',\r\n    },\r\n    transition: 'background-color ease .5s',\r\n\r\n    '& .MuiListItemIcon-root': {\r\n      minWidth: '40px',\r\n    },\r\n    '& .MuiListItemIcon-root, & .MuiListItemText-root': {\r\n      '.active &': {\r\n        color: '#5664d2',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst FixedSidebar = ({\r\n  drawerWidth,\r\n  handleLogout,\r\n  handleDrawerClose,\r\n  lists,\r\n  mobileOpen,\r\n}) => {\r\n  const classes = useFixedSidebarStyles({ drawerWidth });\r\n  const [expList, setExpList] = useState(-1);\r\n  const [expIndex, setExpIndex] = useState(-1);\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"temporary\"\r\n      open={mobileOpen}\r\n      onClose={handleDrawerClose}\r\n      ModalProps={{\r\n        keepMounted: true, // Better open performance on mobile.\r\n      }}\r\n      PaperProps={{\r\n        className: classes.root,\r\n      }}\r\n      sx={{\r\n        display: { xs: 'block', sm: 'none' },\r\n      }}\r\n    >\r\n      {lists.map((list, listIndex) => [\r\n        <List key={`list-${listIndex}`}>\r\n          {list.category ? (\r\n            <Typography variant=\"h6\" sx={{ pl: '10px' }}>\r\n              {list.category}\r\n            </Typography>\r\n          ) : null}\r\n          {list.content.map((listitem, itemIndex) =>\r\n            listitem.children ? (\r\n              [\r\n                <ListItem\r\n                  key={`listitem-${itemIndex}`}\r\n                  button\r\n                  className={classes.navlink}\r\n                  onClick={() => {\r\n                    if (expIndex === itemIndex && expList === listIndex) {\r\n                      setExpIndex(-1);\r\n                      setExpList(-1);\r\n                    } else {\r\n                      setExpIndex(itemIndex);\r\n                      setExpList(listIndex);\r\n                    }\r\n                  }}\r\n                  secondaryAction={\r\n                    <ExpandMoreIcon\r\n                      sx={{\r\n                        transition: 'transform ease .3s',\r\n                        transform:\r\n                          expIndex === itemIndex && expList === listIndex\r\n                            ? ''\r\n                            : 'Rotate(-90deg)',\r\n                      }}\r\n                    />\r\n                  }\r\n                >\r\n                  <ListItemIcon>{listitem.icon}</ListItemIcon>\r\n                  <ListItemText primary={listitem.label} />\r\n                </ListItem>,\r\n                <Collapse\r\n                  key={`listcollapse-${itemIndex}`}\r\n                  in={expIndex === itemIndex && expList === listIndex}\r\n                >\r\n                  <List disablePadding>\r\n                    {listitem.children.map((child, childIndex) => (\r\n                      <NavLink\r\n                        key={childIndex}\r\n                        to={child.path}\r\n                        exact\r\n                        onClick={handleDrawerClose}\r\n                        activeClassName=\"active\"\r\n                      >\r\n                        <ListItem button className={classes.navlink}>\r\n                          <ListItemIcon>{null}</ListItemIcon>\r\n                          <ListItemText primary={child.label} />\r\n                        </ListItem>\r\n                      </NavLink>\r\n                    ))}\r\n                  </List>\r\n                </Collapse>,\r\n              ]\r\n            ) : (\r\n              <NavLink\r\n                key={`listitem-${itemIndex}`}\r\n                to={listitem.path}\r\n                exact\r\n                onClick={handleDrawerClose}\r\n                activeClassName=\"active\"\r\n              >\r\n                <ListItem button className={classes.navlink}>\r\n                  <ListItemIcon>{listitem.icon}</ListItemIcon>\r\n                  <ListItemText primary={listitem.label} />\r\n                </ListItem>\r\n              </NavLink>\r\n            )\r\n          )}\r\n        </List>,\r\n        <Divider key={`listdivider-${listIndex}`} />,\r\n      ])}\r\n      <List>\r\n        <ListItem\r\n          button\r\n          className={classes.navlink}\r\n          onClick={(e) => {\r\n            handleDrawerClose(e);\r\n            handleLogout(e);\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <LogoutIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Logout\" />\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nFixedSidebar.propTypes = {\r\n  drawerWidth: PropTypes.number.isRequired,\r\n  handleLogout: PropTypes.func.isRequired,\r\n  handleDrawerClose: PropTypes.func.isRequired,\r\n  lists: PropTypes.array.isRequired,\r\n  mobileOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FixedSidebar;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    columns,\r\n    actionSpan,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all desserts',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align=\"center\"\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n        <TableCell align=\"center\" colSpan={actionSpan}>\r\n          Action\r\n        </TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  columns: PropTypes.arrayOf(Object).isRequired,\r\n  actionSpan: PropTypes.number.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const { title, numSelected, onBulkRemoveClick, onFilterClick } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton onClick={onBulkRemoveClick}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton onClick={onFilterClick}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onBulkRemoveClick: PropTypes.func.isRequired,\r\n  onFilterClick: PropTypes.func,\r\n};\r\n\r\nconst DataGrid = (props) => {\r\n  const {\r\n    title,\r\n    columns,\r\n    rows,\r\n    onEditClick,\r\n    onRemoveClick,\r\n    onBulkRemoveClick,\r\n    onFilterClick,\r\n    extraLinks,\r\n  } = props;\r\n\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('id');\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const prevRows = useRef();\r\n\r\n  useEffect(() => {\r\n    if (prevRows.current !== rows) {\r\n      prevRows.current = rows;\r\n      setSelected(selected.filter((item) => item in rows.map((row) => row.id)));\r\n    }\r\n    // setSelected(selected.filter((item) => item in rows.map((row) => row.id)));\r\n  }, [rows, selected]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Paper sx={{ width: '100%', mt: 2 }}>\r\n        <EnhancedTableToolbar\r\n          title={title}\r\n          numSelected={selected.length}\r\n          onBulkRemoveClick={(event) => {\r\n            event.preventDefault();\r\n            onBulkRemoveClick(selected);\r\n          }}\r\n          onFilterClick={onFilterClick}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n          >\r\n            <EnhancedTableHead\r\n              columns={columns}\r\n              actionSpan={2 + (extraLinks ? extraLinks.length : 0)}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 rows.slice().sort(getComparator(order, orderBy)) */}\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={index}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          onClick={(event) => handleClick(event, row.id)}\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            'aria-labelledby': labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      {columns.map((field, filedIndex) => (\r\n                        <TableCell\r\n                          key={filedIndex}\r\n                          component=\"th\"\r\n                          id={filedIndex === 0 ? labelId : ''}\r\n                          scope=\"row\"\r\n                          align=\"center\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {field.id === 'id'\r\n                            ? row[field.id] + 1\r\n                            : row[field.id]}\r\n                        </TableCell>\r\n                      ))}\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        padding=\"none\"\r\n                        sx={{ maxWidth: 40, width: 40 }}\r\n                      >\r\n                        <IconButton\r\n                          onClick={(e) => {\r\n                            onEditClick(e, row.id);\r\n                          }}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        padding=\"none\"\r\n                        sx={{ maxWidth: 40, width: 40 }}\r\n                      >\r\n                        <IconButton\r\n                          onClick={(e) => {\r\n                            onRemoveClick(e, index);\r\n                          }}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                      {extraLinks &&\r\n                        extraLinks.map((item, index) => (\r\n                          <TableCell\r\n                            key={index}\r\n                            align=\"center\"\r\n                            padding=\"none\"\r\n                            sx={{ maxWidth: 40, width: 40 }}\r\n                          >\r\n                            {item(row.id)}\r\n                          </TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: 33 * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nDataGrid.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  rows: PropTypes.array.isRequired,\r\n  onEditClick: PropTypes.func.isRequired,\r\n  onRemoveClick: PropTypes.func.isRequired,\r\n  onBulkRemoveClick: PropTypes.func.isRequired,\r\n  OnFilterClick: PropTypes.func,\r\n};\r\n\r\nexport default DataGrid;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport DataGrid from 'components/Common/DataGrid';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'id',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Id',\r\n  },\r\n  {\r\n    id: 'email',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Email',\r\n  },\r\n  {\r\n    id: 'firstName',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'First Name',\r\n  },\r\n  {\r\n    id: 'lastName',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Last Name',\r\n  },\r\n  {\r\n    id: 'passportNo',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Passport',\r\n  },\r\n  {\r\n    id: 'selfieUrl',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Selfie',\r\n  },\r\n];\r\n\r\nfunction mapStateToProps(state) {\r\n  const { auth } = state;\r\n  return { auth };\r\n}\r\n\r\nconst Users = connect(mapStateToProps)((props) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [passport, setPassport] = useState('');\r\n  const [selfie, setSelfie] = useState('');\r\n\r\n  const handleEditClick = (event, index) => {\r\n    if (index < users.length && index >= 0) {\r\n      setEmail(users[index].email);\r\n      setFirstName(users[index].firstName);\r\n      setLastName(users[index].lastName);\r\n      setPassport(users[index].passportNo);\r\n      setSelfie(users[index].selfieUrl);\r\n    }\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    Swal.fire({\r\n      icon: 'success',\r\n      title: 'Success',\r\n      text: 'User information updated successfully.',\r\n      allowOutsideClick: false,\r\n    });\r\n    setOpen(false);\r\n  };\r\n\r\n  const getUsers = (cancelToken) => {\r\n    axios\r\n      .get('/users', { cancelToken: cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setUsers(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n    getUsers(source.token);\r\n    return () => source.cancel('Users Component got unmounted');\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <DataGrid\r\n        title=\"Users\"\r\n        rows={users}\r\n        columns={columns}\r\n        onEditClick={handleEditClick}\r\n      ></DataGrid>\r\n      <Dialog open={open}>\r\n        <DialogTitle>Edit User</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Edit the User information and Click Save button.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"First Name\"\r\n            type=\"\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={firstName}\r\n            onChange={(e) => {\r\n              setFirstName(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Last Name\"\r\n            type=\"\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={lastName}\r\n            onChange={(e) => {\r\n              setLastName(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Passport\"\r\n            type=\"\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={passport}\r\n            onChange={(e) => {\r\n              setPassport(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Selfie\"\r\n            type=\"\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={selfie}\r\n            onChange={(e) => {\r\n              setSelfie(e.target.value);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Users;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { Add as AddIcon } from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport DataGrid from 'components/Common/DataGrid';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Name',\r\n  },\r\n];\r\n\r\nfunction mapStateToProps(state) {\r\n  const { auth } = state;\r\n  return { auth };\r\n}\r\n\r\nconst Brand = connect(mapStateToProps)((props) => {\r\n  const [brands, setBrands] = useState([]);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [createOpen, setCreateOpen] = useState(false);\r\n  const [id, setID] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const handleEditClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < brands.length && index >= 0) {\r\n      setID(brands[index].id);\r\n      setName(brands[index].name);\r\n    }\r\n    setEditOpen(true);\r\n  };\r\n\r\n  const handleRemoveClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < brands.length && index >= 0) {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: 'This action will remove current ChairBrand permanently.',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, Remove!',\r\n        cancelButtonText: 'No, Keep It.',\r\n        allowOutsideClick: false,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          axios\r\n            .delete(`/chairBrand/${brands[index].id}`)\r\n            .then((response) => {\r\n              // handle success\r\n              getBrands();\r\n            })\r\n            .catch(function (error) {\r\n              // handle error\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error.response.data.message,\r\n                allowOutsideClick: false,\r\n              });\r\n              console.log(error);\r\n            })\r\n            .then(function () {\r\n              // always executed\r\n            });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkRemoveClick = (selected) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'This action will remove selected ChairBrands permanently.',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Remove!',\r\n      cancelButtonText: 'No, Keep Them.',\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete('/chairBrand', { data: { ids: selected } })\r\n          .then((response) => {\r\n            // handle success\r\n            getBrands();\r\n          })\r\n          .catch(function (error) {\r\n            // handle error\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: error.response.data.message,\r\n              allowOutsideClick: false,\r\n            });\r\n            console.log(error);\r\n          })\r\n          .then(function () {\r\n            // always executed\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSave = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .put(`/chairBrand/${id}`, { name })\r\n      .then((response) => {\r\n        // handle success\r\n        setEditOpen(false);\r\n        getBrands();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setEditOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setEditOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleCreate = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(`/chairBrand/create`, { name })\r\n      .then((response) => {\r\n        // handle success\r\n        setCreateOpen(false);\r\n        getBrands();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setCreateOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setCreateOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getBrands = (cancelToken) => {\r\n    axios\r\n      .get('/chairBrand', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setBrands(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    getBrands(source.token);\r\n    return () => source.cancel('Brand Component got unmounted');\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        onClick={() => {\r\n          setName('');\r\n          setCreateOpen(true);\r\n        }}\r\n      >\r\n        Add New Brand\r\n      </Button>\r\n      <DataGrid\r\n        title=\"Chair Brands\"\r\n        rows={brands.map(({ id, ...restProps }, index) => ({\r\n          id: index,\r\n          ...restProps,\r\n        }))}\r\n        columns={columns}\r\n        onEditClick={handleEditClick}\r\n        onRemoveClick={handleRemoveClick}\r\n        onBulkRemoveClick={handleBulkRemoveClick}\r\n      ></DataGrid>\r\n      <Dialog open={editOpen}>\r\n        <DialogTitle>Edit ChairBrand</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Edit the ChairBrand and Click Save button.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Name\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setEditOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog open={createOpen}>\r\n        <DialogTitle>Edit ChairBrand</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Input ChairBrand Name and Click Save button.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Name\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setCreateOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCreate}>Create</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Brand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { Add as AddIcon } from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport DataGrid from 'components/Common/DataGrid';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Name',\r\n  },\r\n];\r\n\r\nfunction mapStateToProps(state) {\r\n  const { auth } = state;\r\n  return { auth };\r\n}\r\n\r\nconst Model = connect(mapStateToProps)((props) => {\r\n  const [models, setModels] = useState([]);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [createOpen, setCreateOpen] = useState(false);\r\n  const [id, setID] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const handleEditClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < models.length && index >= 0) {\r\n      setID(models[index].id);\r\n      setName(models[index].name);\r\n    }\r\n    setEditOpen(true);\r\n  };\r\n\r\n  const handleRemoveClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < models.length && index >= 0) {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: 'This action will remove current ChairModel permanently.',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, Remove!',\r\n        cancelButtonText: 'No, Keep It.',\r\n        allowOutsideClick: false,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          axios\r\n            .delete(`/chairModel/${models[index].id}`)\r\n            .then((response) => {\r\n              // handle success\r\n              getModels();\r\n            })\r\n            .catch(function (error) {\r\n              // handle error\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error.response.data.message,\r\n                allowOutsideClick: false,\r\n              });\r\n              console.log(error);\r\n            })\r\n            .then(function () {\r\n              // always executed\r\n            });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkRemoveClick = (selected) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'This action will remove selected ChairModels permanently.',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Remove!',\r\n      cancelButtonText: 'No, Keep Them.',\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete('/chairModel', { data: { ids: selected } })\r\n          .then((response) => {\r\n            // handle success\r\n            getModels();\r\n          })\r\n          .catch(function (error) {\r\n            // handle error\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: error.response.data.message,\r\n              allowOutsideClick: false,\r\n            });\r\n            console.log(error);\r\n          })\r\n          .then(function () {\r\n            // always executed\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSave = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .put(`/chairModel/${id}`, { name })\r\n      .then((response) => {\r\n        // handle success\r\n        setEditOpen(false);\r\n        getModels();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setEditOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setEditOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleCreate = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(`/chairModel/create`, { name })\r\n      .then((response) => {\r\n        // handle success\r\n        setCreateOpen(false);\r\n        getModels();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setCreateOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setCreateOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getModels = (cancelToken) => {\r\n    axios\r\n      .get('/chairModel', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setModels(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    getModels(source.token);\r\n    return () => source.cancel('Model Component got unmounted');\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        onClick={() => {\r\n          setName('');\r\n          setCreateOpen(true);\r\n        }}\r\n      >\r\n        Add New Model\r\n      </Button>\r\n      <DataGrid\r\n        title=\"Chair Models\"\r\n        rows={models.map(({ id, ...restProps }, index) => ({\r\n          id: index,\r\n          ...restProps,\r\n        }))}\r\n        columns={columns}\r\n        onEditClick={handleEditClick}\r\n        onRemoveClick={handleRemoveClick}\r\n        onBulkRemoveClick={handleBulkRemoveClick}\r\n      ></DataGrid>\r\n      <Dialog open={editOpen}>\r\n        <DialogTitle>Edit ChairModel</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Edit the ChairModel and Click Save button.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Name\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setEditOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog open={createOpen}>\r\n        <DialogTitle>Edit ChairModel</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Input ChairModel Name and Click Save button.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Name\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setCreateOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCreate}>Create</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Model;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Autocomplete,\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Fade,\r\n  FormControlLabel,\r\n  IconButton,\r\n  Paper,\r\n  Popper,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Email as EmailIcon,\r\n  PictureAsPdf as PictureAsPdfIcon,\r\n  WhatsApp as WhatsAppIcon,\r\n} from '@mui/icons-material';\r\nimport MuiPhoneNumber from 'material-ui-phone-number';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport QRCode from 'react-qr-code';\r\n\r\nimport DataGrid from 'components/Common/DataGrid';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'invoiceNum',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Invoice',\r\n  },\r\n  {\r\n    id: 'clientName',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: ' Name',\r\n  },\r\n  {\r\n    id: 'clientAddress',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: ' Address',\r\n  },\r\n  {\r\n    id: 'salesmanName',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Salesman Name',\r\n  },\r\n  {\r\n    id: 'orderDate',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Order Date',\r\n  },\r\n  {\r\n    id: 'QTY',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'QTY',\r\n  },\r\n];\r\n\r\nfunction mapStateToProps(state) {\r\n  const { auth } = state;\r\n  return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)((props) => {\r\n  const theme = useTheme();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [createOpen, setCreateOpen] = useState(false);\r\n  const [whatsAppOpen, setWhatsAppOpen] = useState(false);\r\n  const [emailOpen, setEmailOpen] = useState(false);\r\n  const whatsAppMessage = useRef(null);\r\n  const emailContent = useRef(null);\r\n  const [filterAnchor, setFilterAnchor] = useState(null);\r\n\r\n  const [id, setID] = useState('');\r\n  const [brands, setBrands] = useState([]);\r\n  const [models, setModels] = useState([]);\r\n  const [colors, setColors] = useState([]);\r\n  const [chairRemarks, setChairRemarks] = useState(['av', 'avas']);\r\n\r\n  const [filterBrand, setFilterBrand] = useState('');\r\n  const [filterModel, setFilterModel] = useState('');\r\n  const [filterFrameColor, setFilterFrameColor] = useState('');\r\n  const [filterSeatColor, setFilterSeatColor] = useState('');\r\n  const [filterBackColor, setFilterBackColor] = useState('');\r\n\r\n  const [clientName, setClientName] = useState('');\r\n  const [clientEmail, setClientEmail] = useState('');\r\n  const [clientPhone, setClientPhone] = useState('');\r\n  const [clientDistrict, setClientDistrict] = useState('');\r\n  const [clientStreet, setClientStreet] = useState('');\r\n  const [clientBlock, setClientBlock] = useState('');\r\n  const [clientFloor, setClientFloor] = useState('');\r\n  const [clientUnit, setClientUnit] = useState('');\r\n  const [deliveryDate, setDeliveryDate] = useState(new Date());\r\n  const [remark, setRemark] = useState('');\r\n\r\n  const [brand, setBrand] = useState();\r\n  const [model, setModel] = useState();\r\n  const [frameColor, setFrameColor] = useState();\r\n  const [backColor, setBackColor] = useState();\r\n  const [seatColor, setSeatColor] = useState();\r\n  const [withHeadrest, setWithHeadrest] = useState(true);\r\n  const [withAdArmrest, setWithAdArmrest] = useState(true);\r\n  const [chairRemark, setChairRemark] = useState('');\r\n  const [QTY, setQTY] = useState(1);\r\n\r\n  const handleFilterClick = (e) => {\r\n    e.preventDefault();\r\n    if (filterAnchor === null) setFilterAnchor(e.currentTarget);\r\n    else setFilterAnchor(null);\r\n  };\r\n\r\n  const extraLinks = [\r\n    (id) => {\r\n      return (\r\n        <IconButton\r\n          component={Link}\r\n          to={`/chairinvoice/${orders[id].id}`}\r\n          target=\"_blank\"\r\n        >\r\n          <PictureAsPdfIcon />\r\n        </IconButton>\r\n      );\r\n    },\r\n    (id) => {\r\n      return (\r\n        <IconButton\r\n          onClick={() => {\r\n            setClientEmail(orders[id].clientEmail);\r\n            setEmailOpen(true);\r\n          }}\r\n        >\r\n          <EmailIcon />\r\n        </IconButton>\r\n      );\r\n    },\r\n    (id) => {\r\n      return (\r\n        <IconButton\r\n          onClick={() => {\r\n            axios\r\n              .get('whatsapp/checkauth')\r\n              .then(() => {\r\n                setClientPhone(orders[id].clientPhone);\r\n                setWhatsAppOpen(true);\r\n              })\r\n              .catch(function (error) {\r\n                // handle error\r\n                axios\r\n                  .get('whatsapp/getqr')\r\n                  .then((response) => {\r\n                    Swal.fire({\r\n                      icon: 'info',\r\n                      title:\r\n                        'Please signin with this QRCode and Click the button again.',\r\n                      html: ReactDOMServer.renderToStaticMarkup(\r\n                        <QRCode\r\n                          value={`${response.data.qrcode}`}\r\n                          level=\"H\"\r\n                        ></QRCode>\r\n                      ),\r\n                      allowOutsideClick: false,\r\n                    });\r\n                  })\r\n                  .catch(function (qrerror) {\r\n                    // handle error\r\n                    Swal.fire({\r\n                      icon: 'error',\r\n                      title: 'Error',\r\n                      text: 'Unable to use WhatsApp Messaging.',\r\n                      allowOutsideClick: false,\r\n                    });\r\n                  })\r\n                  .then(function () {\r\n                    // always executed\r\n                  });\r\n              })\r\n              .then(function () {\r\n                // always executed\r\n              });\r\n          }}\r\n        >\r\n          <WhatsAppIcon />\r\n        </IconButton>\r\n      );\r\n    },\r\n  ];\r\n\r\n  const handleWhatsAppSend = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post('whatsapp/send', {\r\n        phone: clientPhone,\r\n        message: whatsAppMessage.current.value,\r\n      })\r\n      .then(() => {\r\n        setWhatsAppOpen(false);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setWhatsAppOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setWhatsAppOpen(true);\r\n        });\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleEmailSend = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post('email/send', {\r\n        email: clientEmail,\r\n        message: emailContent.current.value,\r\n      })\r\n      .then(() => {\r\n        setEmailOpen(false);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setEmailOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setEmailOpen(true);\r\n        });\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleEditClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < orders.length && index >= 0) {\r\n      getBrands();\r\n      getModels();\r\n      getColors();\r\n      getChairRemarks();\r\n      setID(orders[index].id);\r\n      setBrand(orders[index].stock.chairBrand);\r\n      setModel(orders[index].stock.chairModel);\r\n      setFrameColor(orders[index].stock.frameColor);\r\n      setBackColor(orders[index].stock.backColor);\r\n      setSeatColor(orders[index].stock.seatColor);\r\n      setWithHeadrest(orders[index].stock.withHeadrest);\r\n      setWithAdArmrest(orders[index].stock.withAdArmrest);\r\n      setChairRemark(orders[index].stock.chairRemark);\r\n      setClientName(orders[index].clientName);\r\n      setClientEmail(orders[index].clientEmail);\r\n      setClientPhone(orders[index].clientPhone);\r\n      setClientDistrict(orders[index].clientDistrict);\r\n      setClientStreet(orders[index].clientStreet);\r\n      setClientBlock(orders[index].clientBlock);\r\n      setClientFloor(orders[index].clientFloor);\r\n      setClientUnit(orders[index].clientUnit);\r\n      setRemark(orders[index].clientRemark);\r\n      const deliveryDate = new Date(orders[index].deliveryDate);\r\n      deliveryDate.setMinutes(\r\n        deliveryDate.getMinutes() - deliveryDate.getTimezoneOffset()\r\n      );\r\n      setDeliveryDate(deliveryDate.toISOString().split('T')[0]);\r\n      setQTY(orders[index].QTY);\r\n      setEditOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleRemoveClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < orders.length && index >= 0) {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: 'This action will remove current ChairOrder permanently.',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, Remove!',\r\n        cancelButtonText: 'No, Keep It.',\r\n        allowOutsideClick: false,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          axios\r\n            .delete(`/chairOrder/${brands[index].id}`)\r\n            .then((response) => {\r\n              // handle success\r\n              getOrders();\r\n            })\r\n            .catch(function (error) {\r\n              // handle error\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error.response.data.message,\r\n                allowOutsideClick: false,\r\n              });\r\n              console.log(error);\r\n            })\r\n            .then(function () {\r\n              // always executed\r\n            });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkRemoveClick = (selected) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'This action will remove selected Brands permanently.',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Remove!',\r\n      cancelButtonText: 'No, Keep Them.',\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete('/chairOrder', { data: { ids: selected } })\r\n          .then((response) => {\r\n            // handle success\r\n            getOrders();\r\n          })\r\n          .catch(function (error) {\r\n            // handle error\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: error.response.data.message,\r\n              allowOutsideClick: false,\r\n            });\r\n            console.log(error);\r\n          })\r\n          .then(function () {\r\n            // always executed\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSave = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .put(`/chairOrder/${id}`, {\r\n        chairBrandId: brand ? brand.id : null,\r\n        chairModelId: model ? model.id : null,\r\n        frameColorId: frameColor ? frameColor.id : null,\r\n        backColorId: backColor ? backColor.id : null,\r\n        seatColorId: seatColor ? seatColor.id : null,\r\n        withHeadrest,\r\n        withAdArmrest,\r\n        chairRemark,\r\n        clientName,\r\n        clientPhone,\r\n        clientEmail,\r\n        clientDistrict,\r\n        clientStreet,\r\n        clientBlock,\r\n        clientFloor,\r\n        clientUnit,\r\n        deliveryDate,\r\n        remark,\r\n        QTY,\r\n      })\r\n      .then((response) => {\r\n        // handle success\r\n        setEditOpen(false);\r\n        getOrders();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setEditOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setEditOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleCreate = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(`/chairOrder/create`, {\r\n        chairBrandId: brand ? brand.id : null,\r\n        chairModelId: model ? model.id : null,\r\n        frameColorId: frameColor ? frameColor.id : null,\r\n        backColorId: backColor ? backColor.id : null,\r\n        seatColorId: seatColor ? seatColor.id : null,\r\n        withHeadrest,\r\n        withAdArmrest,\r\n        chairRemark,\r\n        clientName,\r\n        clientPhone,\r\n        clientEmail,\r\n        clientDistrict,\r\n        clientStreet,\r\n        clientBlock,\r\n        clientFloor,\r\n        clientUnit,\r\n        deliveryDate,\r\n        remark,\r\n        QTY,\r\n      })\r\n      .then((response) => {\r\n        // handle success\r\n        setCreateOpen(false);\r\n        getOrders();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setCreateOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setCreateOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getBrands = (cancelToken) => {\r\n    axios\r\n      .get('/chairBrand', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setBrands(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getModels = (cancelToken) => {\r\n    axios\r\n      .get('/chairModel', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setModels(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getOrders = (cancelToken) => {\r\n    axios\r\n      .get('/chairOrder', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setOrders(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getColors = (cancelToken) => {\r\n    axios\r\n      .get('/productColor', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setColors(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getChairRemarks = (cancelToken) => {\r\n    // axios\r\n    //   .get('/chairremark', { cancelToken })\r\n    //   .then((response) => {\r\n    //     // handle success\r\n    //     setChairRemarks(response.data.map((item) => item.detail));\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     // handle error\r\n    //     console.log(error);\r\n    //   })\r\n    //   .then(function () {\r\n    //     // always executed\r\n    //   });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    getOrders(source.token);\r\n    return () => source.cancel('Brand Component got unmounted');\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        onClick={() => {\r\n          getBrands();\r\n          getModels();\r\n          getColors();\r\n          getChairRemarks();\r\n          setBrand(null);\r\n          setModel(null);\r\n          setFrameColor(null);\r\n          setBackColor(null);\r\n          setSeatColor(null);\r\n          setWithHeadrest(false);\r\n          setWithAdArmrest(false);\r\n          setChairRemark('');\r\n          setClientName('');\r\n          setClientEmail('');\r\n          setClientPhone('');\r\n          setClientDistrict('');\r\n          setClientStreet('');\r\n          setClientBlock('');\r\n          setClientFloor('');\r\n          setClientUnit('');\r\n          const now = new Date();\r\n          now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\r\n          setDeliveryDate(now.toISOString().split('T')[0]);\r\n          setRemark('');\r\n          setQTY(1);\r\n          setCreateOpen(true);\r\n        }}\r\n      >\r\n        Add New Order\r\n      </Button>\r\n      <DataGrid\r\n        title=\"Chair Orders\"\r\n        rows={orders\r\n          .map(\r\n            (\r\n              {\r\n                id,\r\n                clientDistrict,\r\n                clientStreet,\r\n                clientBlock,\r\n                clientFloor,\r\n                clientUnit,\r\n                salesman,\r\n                createdAt,\r\n                ...restProps\r\n              },\r\n              index\r\n            ) => ({\r\n              id: index,\r\n              salesmanName: (salesman.firstName || '').concat(\r\n                ' ',\r\n                salesman.lastName || ''\r\n              ),\r\n              orderDate: (() => {\r\n                const createdTime = new Date(createdAt);\r\n                createdTime.setMinutes(\r\n                  createdTime.getMinutes() - createdTime.getTimezoneOffset()\r\n                );\r\n                return createdTime.toISOString().split('T')[0];\r\n              })(),\r\n              clientAddress: [\r\n                clientDistrict,\r\n                clientStreet,\r\n                clientBlock,\r\n                clientFloor,\r\n                clientUnit,\r\n              ].join(', '),\r\n              ...restProps,\r\n            })\r\n          )\r\n          .filter(\r\n            (item, key) =>\r\n              (item.stock.chairBrand.name || '')\r\n                .toLowerCase()\r\n                .includes(filterBrand.toLowerCase()) &&\r\n              (item.stock.chairModel.name || '')\r\n                .toLowerCase()\r\n                .includes(filterModel.toLowerCase()) &&\r\n              (item.stock.frameColor.name || '')\r\n                .toLowerCase()\r\n                .includes(filterFrameColor.toLowerCase()) &&\r\n              (item.stock.backColor.name || '')\r\n                .toLowerCase()\r\n                .includes(filterBackColor.toLowerCase()) &&\r\n              (item.stock.seatColor.name || '')\r\n                .toLowerCase()\r\n                .includes(filterSeatColor.toLowerCase())\r\n          )}\r\n        columns={columns}\r\n        extraLinks={extraLinks}\r\n        onEditClick={handleEditClick}\r\n        onRemoveClick={handleRemoveClick}\r\n        onBulkRemoveClick={handleBulkRemoveClick}\r\n        onFilterClick={handleFilterClick}\r\n      />\r\n      <Popper\r\n        anchorEl={filterAnchor}\r\n        open={Boolean(filterAnchor)}\r\n        placement={'bottom-end'}\r\n        disablePortal={false}\r\n        transition\r\n        onClose={() => {\r\n          setFilterAnchor(null);\r\n        }}\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                maxWidth: 400,\r\n                // maxWidth: '100%',\r\n              }}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                flexWrap=\"wrap\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                {[\r\n                  {\r\n                    value: filterBrand,\r\n                    values: brands,\r\n                    setValue: setFilterBrand,\r\n                    label: 'Brand',\r\n                    width: '48%',\r\n                  },\r\n                  {\r\n                    value: filterModel,\r\n                    values: models,\r\n                    setValue: setFilterModel,\r\n                    label: 'Model',\r\n                    width: '48%',\r\n                  },\r\n                  {\r\n                    value: filterFrameColor,\r\n                    values: colors,\r\n                    setValue: setFilterFrameColor,\r\n                    label: 'FrameColor',\r\n                    width: '30%',\r\n                  },\r\n                  {\r\n                    value: filterBackColor,\r\n                    values: colors,\r\n                    setValue: setFilterBackColor,\r\n                    label: 'BackColor',\r\n                    width: '30%',\r\n                  },\r\n                  {\r\n                    value: filterSeatColor,\r\n                    values: colors,\r\n                    setValue: setFilterSeatColor,\r\n                    label: 'SeatColor',\r\n                    width: '30%',\r\n                  },\r\n                ].map(({ value, values, setValue, label, width }, index) => (\r\n                  <TextField\r\n                    key={index}\r\n                    sx={{ flexBasis: width, minWidth: width }}\r\n                    value={value}\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setValue(event.target.value);\r\n                    }}\r\n                    margin=\"dense\"\r\n                    label={label}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                ))}\r\n                <TextField\r\n                  type=\"datetime-local\"\r\n                  margin=\"dense\"\r\n                  label=\"from\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={(e) => {\r\n                    console.log(typeof e.target.value);\r\n                  }}\r\n                ></TextField>\r\n              </Box>\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Button\r\n                  onClick={() => {\r\n                    setFilterBrand('');\r\n                    setFilterModel('');\r\n                    setFilterFrameColor('');\r\n                    setFilterBackColor('');\r\n                    setFilterSeatColor('');\r\n                  }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  Clear\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    setFilterAnchor(null);\r\n                  }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  OK\r\n                </Button>\r\n              </Box>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={editOpen}\r\n      >\r\n        <DialogTitle>Edit ChairOrder</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Chair Features\r\n              </Typography>\r\n              {[\r\n                {\r\n                  value: brand,\r\n                  values: brands,\r\n                  setValue: setBrand,\r\n                  label: 'Brand',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: model,\r\n                  values: models,\r\n                  setValue: setModel,\r\n                  label: 'Model',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: frameColor,\r\n                  values: colors,\r\n                  setValue: setFrameColor,\r\n                  label: 'FrameColor',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  value: backColor,\r\n                  values: colors,\r\n                  setValue: setBackColor,\r\n                  label: 'BackColor',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  value: seatColor,\r\n                  values: colors,\r\n                  setValue: setSeatColor,\r\n                  label: 'SeatColor',\r\n                  width: '30%',\r\n                },\r\n              ].map(({ value, values, setValue, label, width }, index) => (\r\n                <Autocomplete\r\n                  key={index}\r\n                  disablePortal\r\n                  value={value ? value : null}\r\n                  onChange={(event, newValue) => {\r\n                    event.preventDefault();\r\n                    setValue(newValue);\r\n                  }}\r\n                  options={values}\r\n                  getOptionLabel={(option) => option.name}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      {...params}\r\n                      label={label}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              ))}\r\n              <Autocomplete\r\n                disablePortal\r\n                freeSolo\r\n                value={chairRemark}\r\n                onChange={(event, newValue) => {\r\n                  event.preventDefault();\r\n                  setChairRemark(newValue);\r\n                }}\r\n                options={chairRemarks}\r\n                fullWidth\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Chair Remark\"\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setChairRemark(event.target.value);\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n              <FormControlLabel\r\n                sx={{ flexBasis: '45%', minWidth: '45%' }}\r\n                control={\r\n                  <Checkbox\r\n                    checked={withHeadrest}\r\n                    onChange={() => {\r\n                      setWithHeadrest(!withHeadrest);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"With Headrest\"\r\n              />\r\n              <FormControlLabel\r\n                sx={{ flexBasis: '45%', minWidth: '45%' }}\r\n                control={\r\n                  <Checkbox\r\n                    checked={withAdArmrest}\r\n                    onChange={() => {\r\n                      setWithAdArmrest(!withAdArmrest);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"With Adjustable Armrests\"\r\n              />\r\n            </Paper>\r\n            <Paper\r\n              sx={{\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Client Info\r\n              </Typography>\r\n              {[\r\n                {\r\n                  label: 'Name',\r\n                  value: clientName,\r\n                  setValue: setClientName,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n                {\r\n                  label: 'Phone',\r\n                  value: clientPhone,\r\n                  setValue: setClientPhone,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Email',\r\n                  value: clientEmail,\r\n                  setValue: setClientEmail,\r\n                  type: 'email',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'District',\r\n                  value: clientDistrict,\r\n                  setValue: setClientDistrict,\r\n                  type: 'text',\r\n                  width: '55%',\r\n                },\r\n                {\r\n                  label: 'Street',\r\n                  value: clientStreet,\r\n                  setValue: setClientStreet,\r\n                  type: 'text',\r\n                  width: '40%',\r\n                },\r\n                {\r\n                  label: 'Block',\r\n                  value: clientBlock,\r\n                  setValue: setClientBlock,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Floor',\r\n                  value: clientFloor,\r\n                  setValue: setClientFloor,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Unit',\r\n                  value: clientUnit,\r\n                  setValue: setClientUnit,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Delivery Date',\r\n                  value: deliveryDate,\r\n                  setValue: setDeliveryDate,\r\n                  type: 'date',\r\n                  width: '100%',\r\n                  InputLabelProps: { shrink: true },\r\n                },\r\n                {\r\n                  label: 'Remark',\r\n                  value: remark,\r\n                  setValue: setRemark,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n              ].map(({ setValue, width, ...restProps }, index) =>\r\n                restProps.label === 'Phone' ? (\r\n                  <MuiPhoneNumber\r\n                    key={index}\r\n                    defaultCountry={'hk'}\r\n                    onChange={(value) => {\r\n                      setValue(value);\r\n                    }}\r\n                    sx={{ flexBasis: width, minWidth: width }}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                    {...restProps}\r\n                  />\r\n                ) : (\r\n                  <TextField\r\n                    key={index}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(e) => {\r\n                      setValue(e.target.value);\r\n                    }}\r\n                    sx={{ flexBasis: width, minWidth: width }}\r\n                    {...restProps}\r\n                  />\r\n                )\r\n              )}\r\n            </Paper>\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"QTY\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={QTY}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setQTY(e.target.value);\r\n              }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setEditOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={createOpen}\r\n      >\r\n        <DialogTitle>Create ChairOrder</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Chair Features\r\n              </Typography>\r\n              {[\r\n                {\r\n                  value: brand,\r\n                  values: brands,\r\n                  setValue: setBrand,\r\n                  label: 'Brand',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: model,\r\n                  values: models,\r\n                  setValue: setModel,\r\n                  label: 'Model',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: frameColor,\r\n                  values: colors,\r\n                  setValue: setFrameColor,\r\n                  label: 'FrameColor',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  value: backColor,\r\n                  values: colors,\r\n                  setValue: setBackColor,\r\n                  label: 'BackColor',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  value: seatColor,\r\n                  values: colors,\r\n                  setValue: setSeatColor,\r\n                  label: 'SeatColor',\r\n                  width: '30%',\r\n                },\r\n              ].map(({ value, values, setValue, label, width }, index) => (\r\n                <Autocomplete\r\n                  key={index}\r\n                  disablePortal\r\n                  value={value ? value : null}\r\n                  onChange={(event, newValue) => {\r\n                    event.preventDefault();\r\n                    setValue(newValue);\r\n                  }}\r\n                  options={values}\r\n                  getOptionLabel={(option) => option.name}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      {...params}\r\n                      label={label}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              ))}\r\n              <Autocomplete\r\n                disablePortal\r\n                freeSolo\r\n                value={chairRemark}\r\n                onChange={(event, newValue) => {\r\n                  event.preventDefault();\r\n                  setChairRemark(newValue);\r\n                }}\r\n                options={chairRemarks}\r\n                fullWidth\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Chair Remark\"\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setChairRemark(event.target.value);\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n              <FormControlLabel\r\n                sx={{ flexBasis: '45%', minWidth: '45%' }}\r\n                control={\r\n                  <Checkbox\r\n                    checked={withHeadrest}\r\n                    onChange={() => {\r\n                      setWithHeadrest(!withHeadrest);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"With Headrest\"\r\n              />\r\n              <FormControlLabel\r\n                sx={{ flexBasis: '45%', minWidth: '45%' }}\r\n                control={\r\n                  <Checkbox\r\n                    checked={withAdArmrest}\r\n                    onChange={() => {\r\n                      setWithAdArmrest(!withAdArmrest);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"With Adjustable Armrests\"\r\n              />\r\n            </Paper>\r\n            <Paper\r\n              sx={{\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Client Info\r\n              </Typography>\r\n              {[\r\n                {\r\n                  label: 'Name',\r\n                  value: clientName,\r\n                  setValue: setClientName,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n                {\r\n                  label: 'Phone',\r\n                  value: clientPhone,\r\n                  setValue: setClientPhone,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Email',\r\n                  value: clientEmail,\r\n                  setValue: setClientEmail,\r\n                  type: 'email',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'District',\r\n                  value: clientDistrict,\r\n                  setValue: setClientDistrict,\r\n                  type: 'text',\r\n                  width: '55%',\r\n                },\r\n                {\r\n                  label: 'Street',\r\n                  value: clientStreet,\r\n                  setValue: setClientStreet,\r\n                  type: 'text',\r\n                  width: '40%',\r\n                },\r\n                {\r\n                  label: 'Block',\r\n                  value: clientBlock,\r\n                  setValue: setClientBlock,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Floor',\r\n                  value: clientFloor,\r\n                  setValue: setClientFloor,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Unit',\r\n                  value: clientUnit,\r\n                  setValue: setClientUnit,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Delivery Date',\r\n                  value: deliveryDate,\r\n                  setValue: setDeliveryDate,\r\n                  type: 'date',\r\n                  width: '100%',\r\n                  InputLabelProps: { shrink: true },\r\n                },\r\n                {\r\n                  label: 'Remark',\r\n                  value: remark,\r\n                  setValue: setRemark,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n              ].map(({ setValue, width, ...restProps }, index) =>\r\n                restProps.label === 'Phone' ? (\r\n                  <MuiPhoneNumber\r\n                    key={index}\r\n                    defaultCountry={'hk'}\r\n                    onChange={(value) => {\r\n                      setValue(value);\r\n                    }}\r\n                    sx={{ flexBasis: width, minWidth: width }}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                    {...restProps}\r\n                  />\r\n                ) : (\r\n                  <TextField\r\n                    key={index}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(e) => {\r\n                      setValue(e.target.value);\r\n                    }}\r\n                    sx={{ flexBasis: width, minWidth: width }}\r\n                    {...restProps}\r\n                  />\r\n                )\r\n              )}\r\n            </Paper>\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"QTY\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={QTY}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setQTY(e.target.value);\r\n              }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              setCreateOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCreate}>Create</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={whatsAppOpen}\r\n      >\r\n        <DialogTitle>Send WhatsApp Message to the Client</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <MuiPhoneNumber\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Phone Number\"\r\n              defaultCountry={'hk'}\r\n              value={clientPhone}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              inputRef={whatsAppMessage}\r\n              label=\"Message\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              defaultValue={`Hello ${clientName},\\nThank you for your order! Please find here (payment link URL) for your payment. Once finished, your order will be processed.\\nOnce finished, your order will be processed accordingly.`}\r\n              multiline\r\n              minRows={4}\r\n              maxRows={10}\r\n              // onChange={(e) => {\r\n              //   setWhatsAppMessage(e.target.value);\r\n              // }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              setWhatsAppOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleWhatsAppSend}>Send</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={emailOpen}\r\n      >\r\n        <DialogTitle>Send Email to the Client</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <TextField\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={clientEmail}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              inputRef={emailContent}\r\n              label=\"Message\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              defaultValue={`Hello ${clientName},\\nThank you for your order! Please find here (payment link URL) for your payment. Once finished, your order will be processed.\\nOnce finished, your order will be processed accordingly.`}\r\n              multiline\r\n              minRows={4}\r\n              maxRows={10}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              setEmailOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleEmailSend}>Send</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Autocomplete,\r\n  Button,\r\n  Box,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Fade,\r\n  FormControlLabel,\r\n  Paper,\r\n  Popper,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { Add as AddIcon } from '@mui/icons-material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport DataGrid from 'components/Common/DataGrid';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'id',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Id',\r\n  },\r\n  {\r\n    id: 'chairBrand',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Brand',\r\n  },\r\n  {\r\n    id: 'chairModel',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Model',\r\n  },\r\n  {\r\n    id: 'frameColor',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Frame Color',\r\n  },\r\n  {\r\n    id: 'backColor',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Back Color',\r\n  },\r\n  {\r\n    id: 'seatColor',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Seat Color',\r\n  },\r\n  {\r\n    id: 'withHeadrest',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'With Headrest',\r\n  },\r\n  {\r\n    id: 'withAdArmrest',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'With Adjustable Armrests',\r\n  },\r\n  {\r\n    id: 'chairRemark',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Special Remarks',\r\n  },\r\n  {\r\n    id: 'QTY',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'QTY',\r\n  },\r\n];\r\n\r\nfunction mapStateToProps(state) {\r\n  const { auth } = state;\r\n  return { auth };\r\n}\r\n\r\nconst Stock = connect(mapStateToProps)((props) => {\r\n  const theme = useTheme();\r\n  const [stocks, setStocks] = useState([]);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [createOpen, setCreateOpen] = useState(false);\r\n  const [id, setID] = useState('');\r\n  const [filterAnchor, setFilterAnchor] = useState(null);\r\n\r\n  const [brands, setBrands] = useState([]);\r\n  const [models, setModels] = useState([]);\r\n  const [colors, setColors] = useState([]);\r\n  const [chairRemarks, setChairRemarks] = useState(['av', 'avas']);\r\n\r\n  const [filterBrand, setFilterBrand] = useState('');\r\n  const [filterModel, setFilterModel] = useState('');\r\n  const [filterFrameColor, setFilterFrameColor] = useState('');\r\n  const [filterSeatColor, setFilterSeatColor] = useState('');\r\n  const [filterBackColor, setFilterBackColor] = useState('');\r\n\r\n  const [brand, setBrand] = useState();\r\n  const [model, setModel] = useState();\r\n  const [frameColor, setFrameColor] = useState();\r\n  const [backColor, setBackColor] = useState();\r\n  const [seatColor, setSeatColor] = useState();\r\n  const [withHeadrest, setWithHeadrest] = useState(true);\r\n  const [withAdArmrest, setWithAdArmrest] = useState(true);\r\n  const [chairRemark, setChairRemark] = useState('');\r\n  const [QTY, setQTY] = useState(0);\r\n\r\n  const handleFilterClick = (e) => {\r\n    e.preventDefault();\r\n    if (filterAnchor === null) setFilterAnchor(e.currentTarget);\r\n    else setFilterAnchor(null);\r\n  };\r\n\r\n  const handleEditClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < stocks.length && index >= 0) {\r\n      getBrands();\r\n      getModels();\r\n      getColors();\r\n      getChairRemarks();\r\n      setID(stocks[index].id);\r\n      setBrand(stocks[index].chairBrand);\r\n      setModel(stocks[index].chairModel);\r\n      setFrameColor(stocks[index].frameColor);\r\n      setBackColor(stocks[index].backColor);\r\n      setSeatColor(stocks[index].seatColor);\r\n      setWithHeadrest(stocks[index].withHeadrest);\r\n      setWithAdArmrest(stocks[index].withAdArmrest);\r\n      setChairRemark(stocks[index].chairRemark);\r\n      setQTY(stocks[index].QTY);\r\n    }\r\n    setEditOpen(true);\r\n  };\r\n\r\n  const handleRemoveClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < stocks.length && index >= 0) {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: 'This action will remove current ChairStock permanently.',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, Remove!',\r\n        cancelButtonText: 'No, Keep It.',\r\n        allowOutsideClick: false,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          axios\r\n            .delete(`/chairStock/${stocks[index].id}`)\r\n            .then((response) => {\r\n              // handle success\r\n              getStocks();\r\n            })\r\n            .catch(function (error) {\r\n              // handle error\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error.response.data.message,\r\n                allowOutsideClick: false,\r\n              });\r\n              console.log(error);\r\n            })\r\n            .then(function () {\r\n              // always executed\r\n            });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkRemoveClick = (selected) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'This action will remove selected ChairStocks permanently.',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Remove!',\r\n      cancelButtonText: 'No, Keep Them.',\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete('/chairStock', { data: { ids: selected } })\r\n          .then((response) => {\r\n            // handle success\r\n            getStocks();\r\n          })\r\n          .catch(function (error) {\r\n            // handle error\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: error.response.data.message,\r\n              allowOutsideClick: false,\r\n            });\r\n            console.log(error);\r\n          })\r\n          .then(function () {\r\n            // always executed\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSave = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .put(`/chairStock/${id}`, {\r\n        chairBrandId: brand ? brand.id : null,\r\n        chairModelId: model ? model.id : null,\r\n        frameColorId: frameColor ? frameColor.id : null,\r\n        backColorId: backColor ? backColor.id : null,\r\n        seatColorId: seatColor ? seatColor.id : null,\r\n        withHeadrest,\r\n        withAdArmrest,\r\n        chairRemark,\r\n        QTY,\r\n      })\r\n      .then((response) => {\r\n        // handle success\r\n        setEditOpen(false);\r\n        getStocks();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setEditOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setEditOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleCreate = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(`/chairStock/create`, {\r\n        chairBrandId: brand ? brand.id : null,\r\n        chairModelId: model ? model.id : null,\r\n        frameColorId: frameColor ? frameColor.id : null,\r\n        backColorId: backColor ? backColor.id : null,\r\n        seatColorId: seatColor ? seatColor.id : null,\r\n        withHeadrest,\r\n        withAdArmrest,\r\n        chairRemark,\r\n        QTY,\r\n      })\r\n      .then((response) => {\r\n        // handle success\r\n        setCreateOpen(false);\r\n        getStocks();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setCreateOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setCreateOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getBrands = (cancelToken) => {\r\n    axios\r\n      .get('/chairBrand', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setBrands(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getModels = (cancelToken) => {\r\n    axios\r\n      .get('/chairModel', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setModels(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getColors = (cancelToken) => {\r\n    axios\r\n      .get('/productColor', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setColors(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getChairRemarks = (cancelToken) => {\r\n    // axios\r\n    //   .get('/chairremark', { cancelToken })\r\n    //   .then((response) => {\r\n    //     // handle success\r\n    //     setChairRemarks(response.data.map((item) => item.detail));\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     // handle error\r\n    //     console.log(error);\r\n    //   })\r\n    //   .then(function () {\r\n    //     // always executed\r\n    //   });\r\n  };\r\n\r\n  const getStocks = (cancelToken) => {\r\n    axios\r\n      .get('/chairStock', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setStocks(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    getStocks(source.token);\r\n    return () => source.cancel('Stock Component got unmounted');\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        onClick={() => {\r\n          getBrands();\r\n          getModels();\r\n          getColors();\r\n          getChairRemarks();\r\n          setBrand(null);\r\n          setModel(null);\r\n          setFrameColor(null);\r\n          setBackColor(null);\r\n          setSeatColor(null);\r\n          setWithHeadrest(false);\r\n          setWithAdArmrest(false);\r\n          setChairRemark('');\r\n          setQTY(0);\r\n          setCreateOpen(true);\r\n        }}\r\n      >\r\n        Add New Stock\r\n      </Button>\r\n      <DataGrid\r\n        title=\"Chair Stocks\"\r\n        rows={stocks\r\n          .map(\r\n            (\r\n              {\r\n                id,\r\n                chairBrand,\r\n                chairModel,\r\n                frameColor,\r\n                backColor,\r\n                seatColor,\r\n                withHeadrest,\r\n                withAdArmrest,\r\n                ...restProps\r\n              },\r\n              index\r\n            ) => ({\r\n              id: index,\r\n              chairBrand: chairBrand ? chairBrand.name : null,\r\n              chairModel: chairModel ? chairModel.name : null,\r\n              frameColor: frameColor ? frameColor.name : null,\r\n              backColor: backColor ? backColor.name : null,\r\n              seatColor: seatColor ? seatColor.name : null,\r\n              withHeadrest: withHeadrest ? 'Yes' : 'No',\r\n              withAdArmrest: withAdArmrest ? 'Yes' : 'No',\r\n              ...restProps,\r\n            })\r\n          )\r\n          .filter(\r\n            (item, key) =>\r\n              (item.chairBrand || '')\r\n                .toLowerCase()\r\n                .includes(filterBrand.toLowerCase()) &&\r\n              (item.chairModel || '')\r\n                .toLowerCase()\r\n                .includes(filterModel.toLowerCase()) &&\r\n              (item.frameColor || '')\r\n                .toLowerCase()\r\n                .includes(filterFrameColor.toLowerCase()) &&\r\n              (item.backColor || '')\r\n                .toLowerCase()\r\n                .includes(filterBackColor.toLowerCase()) &&\r\n              (item.seatColor || '')\r\n                .toLowerCase()\r\n                .includes(filterSeatColor.toLowerCase())\r\n          )}\r\n        columns={columns}\r\n        onEditClick={handleEditClick}\r\n        onRemoveClick={handleRemoveClick}\r\n        onBulkRemoveClick={handleBulkRemoveClick}\r\n        onFilterClick={handleFilterClick}\r\n      ></DataGrid>\r\n      <Popper\r\n        anchorEl={filterAnchor}\r\n        open={Boolean(filterAnchor)}\r\n        placement={'bottom-end'}\r\n        disablePortal={false}\r\n        transition\r\n        onClose={() => {\r\n          setFilterAnchor(null);\r\n        }}\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                maxWidth: 400,\r\n                // maxWidth: '100%',\r\n              }}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                flexWrap=\"wrap\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                {[\r\n                  {\r\n                    value: filterBrand,\r\n                    values: brands,\r\n                    setValue: setFilterBrand,\r\n                    label: 'Brand',\r\n                    width: '48%',\r\n                  },\r\n                  {\r\n                    value: filterModel,\r\n                    values: models,\r\n                    setValue: setFilterModel,\r\n                    label: 'Model',\r\n                    width: '48%',\r\n                  },\r\n                  {\r\n                    value: filterFrameColor,\r\n                    values: colors,\r\n                    setValue: setFilterFrameColor,\r\n                    label: 'FrameColor',\r\n                    width: '30%',\r\n                  },\r\n                  {\r\n                    value: filterBackColor,\r\n                    values: colors,\r\n                    setValue: setFilterBackColor,\r\n                    label: 'BackColor',\r\n                    width: '30%',\r\n                  },\r\n                  {\r\n                    value: filterSeatColor,\r\n                    values: colors,\r\n                    setValue: setFilterSeatColor,\r\n                    label: 'SeatColor',\r\n                    width: '30%',\r\n                  },\r\n                ].map(({ value, values, setValue, label, width }, index) => (\r\n                  <TextField\r\n                    key={index}\r\n                    sx={{ flexBasis: width, minWidth: width }}\r\n                    value={value}\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setValue(event.target.value);\r\n                    }}\r\n                    margin=\"dense\"\r\n                    label={label}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                ))}\r\n              </Box>\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Button\r\n                  onClick={() => {\r\n                    setFilterBrand('');\r\n                    setFilterModel('');\r\n                    setFilterFrameColor('');\r\n                    setFilterBackColor('');\r\n                    setFilterSeatColor('');\r\n                  }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  Clear\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    setFilterAnchor(null);\r\n                  }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  OK\r\n                </Button>\r\n              </Box>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={editOpen}\r\n      >\r\n        <DialogTitle>Edit ChairStock</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography sx={{ flexBasis: '100%', minWidth: '100%' }}>\r\n                Chair Features\r\n              </Typography>\r\n              {[\r\n                {\r\n                  value: brand,\r\n                  values: brands,\r\n                  setValue: setBrand,\r\n                  label: 'Brand',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: model,\r\n                  values: models,\r\n                  setValue: setModel,\r\n                  label: 'Model',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: frameColor,\r\n                  values: colors,\r\n                  setValue: setFrameColor,\r\n                  label: 'FrameColor',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  value: backColor,\r\n                  values: colors,\r\n                  setValue: setBackColor,\r\n                  label: 'BackColor',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  value: seatColor,\r\n                  values: colors,\r\n                  setValue: setSeatColor,\r\n                  label: 'SeatColor',\r\n                  width: '30%',\r\n                },\r\n              ].map(({ value, values, setValue, label, width }, index) => (\r\n                <Autocomplete\r\n                  key={index}\r\n                  disablePortal\r\n                  value={value ? value : null}\r\n                  onChange={(event, newValue) => {\r\n                    event.preventDefault();\r\n                    setValue(newValue);\r\n                  }}\r\n                  freeSolo\r\n                  options={values}\r\n                  getOptionLabel={(option) => option.name}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      margin=\"dense\"\r\n                      label={label}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              ))}\r\n              <Autocomplete\r\n                disablePortal\r\n                freeSolo\r\n                value={chairRemark}\r\n                onChange={(event, newValue) => {\r\n                  event.preventDefault();\r\n                  setChairRemark(newValue);\r\n                }}\r\n                options={chairRemarks}\r\n                fullWidth\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Chair Remark\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setChairRemark(event.target.value);\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n              <FormControlLabel\r\n                sx={{ flexBasis: '45%', minWidth: '45%' }}\r\n                control={\r\n                  <Checkbox\r\n                    checked={withHeadrest}\r\n                    onChange={() => {\r\n                      setWithHeadrest(!withHeadrest);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"With Headrest\"\r\n              />\r\n              <FormControlLabel\r\n                sx={{ flexBasis: '45%', minWidth: '45%' }}\r\n                control={\r\n                  <Checkbox\r\n                    checked={withAdArmrest}\r\n                    onChange={() => {\r\n                      setWithAdArmrest(!withAdArmrest);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"With Adjustable Armrests\"\r\n              />\r\n            </Paper>\r\n            <TextField\r\n              label=\"QTY\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={QTY}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setQTY(e.target.value);\r\n              }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setEditOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={createOpen}\r\n      >\r\n        <DialogTitle>Create ChairStock</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography sx={{ flexBasis: '100%', minWidth: '100%' }}>\r\n                Chair Features\r\n              </Typography>\r\n              {[\r\n                {\r\n                  value: brand,\r\n                  values: brands,\r\n                  setValue: setBrand,\r\n                  label: 'Brand',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: model,\r\n                  values: models,\r\n                  setValue: setModel,\r\n                  label: 'Model',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: frameColor,\r\n                  values: colors,\r\n                  setValue: setFrameColor,\r\n                  label: 'FrameColor',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  value: backColor,\r\n                  values: colors,\r\n                  setValue: setBackColor,\r\n                  label: 'BackColor',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  value: seatColor,\r\n                  values: colors,\r\n                  setValue: setSeatColor,\r\n                  label: 'SeatColor',\r\n                  width: '30%',\r\n                },\r\n              ].map(({ value, values, setValue, label, width }, index) => (\r\n                <Autocomplete\r\n                  key={index}\r\n                  disablePortal\r\n                  value={value ? value : null}\r\n                  onChange={(event, newValue) => {\r\n                    event.preventDefault();\r\n                    setValue(newValue);\r\n                  }}\r\n                  options={values}\r\n                  getOptionLabel={(option) => option.name}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      margin=\"dense\"\r\n                      label={label}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              ))}\r\n              <Autocomplete\r\n                disablePortal\r\n                freeSolo\r\n                value={chairRemark}\r\n                onChange={(event, newValue) => {\r\n                  event.preventDefault();\r\n                  setChairRemark(newValue);\r\n                }}\r\n                options={chairRemarks}\r\n                fullWidth\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Chair Remark\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setChairRemark(event.target.value);\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n              <FormControlLabel\r\n                sx={{ flexBasis: '45%', minWidth: '45%' }}\r\n                control={\r\n                  <Checkbox\r\n                    checked={withHeadrest}\r\n                    onChange={() => {\r\n                      setWithHeadrest(!withHeadrest);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"With Headrest\"\r\n              />\r\n              <FormControlLabel\r\n                sx={{ flexBasis: '45%', minWidth: '45%' }}\r\n                control={\r\n                  <Checkbox\r\n                    checked={withAdArmrest}\r\n                    onChange={() => {\r\n                      setWithAdArmrest(!withAdArmrest);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"With Adjustable Armrests\"\r\n              />\r\n            </Paper>\r\n            <TextField\r\n              label=\"QTY\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={QTY}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setQTY(e.target.value);\r\n              }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setCreateOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCreate}>Create</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Stock;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { Add as AddIcon } from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport DataGrid from 'components/Common/DataGrid';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Name',\r\n  },\r\n];\r\n\r\nfunction mapStateToProps(state) {\r\n  const { auth } = state;\r\n  return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)((props) => {\r\n  const [models, setModels] = useState([]);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [createOpen, setCreateOpen] = useState(false);\r\n  const [id, setID] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const handleEditClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < models.length && index >= 0) {\r\n      setID(models[index].id);\r\n      setName(models[index].name);\r\n    }\r\n    setEditOpen(true);\r\n  };\r\n\r\n  const handleRemoveClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < models.length && index >= 0) {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: 'This action will remove current ChairModel permanently.',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, Remove!',\r\n        cancelButtonText: 'No, Keep It.',\r\n        allowOutsideClick: false,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          axios\r\n            .delete(`/deskModel/${models[index].id}`)\r\n            .then((response) => {\r\n              // handle success\r\n              getModels();\r\n            })\r\n            .catch(function (error) {\r\n              // handle error\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error.response.data.message,\r\n                allowOutsideClick: false,\r\n              });\r\n              console.log(error);\r\n            })\r\n            .then(function () {\r\n              // always executed\r\n            });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkRemoveClick = (selected) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'This action will remove selected ChairModels permanently.',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Remove!',\r\n      cancelButtonText: 'No, Keep Them.',\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete('/deskModel', { data: { ids: selected } })\r\n          .then((response) => {\r\n            // handle success\r\n            getModels();\r\n          })\r\n          .catch(function (error) {\r\n            // handle error\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: error.response.data.message,\r\n              allowOutsideClick: false,\r\n            });\r\n            console.log(error);\r\n          })\r\n          .then(function () {\r\n            // always executed\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSave = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .put(`/deskModel/${id}`, { name })\r\n      .then((response) => {\r\n        // handle success\r\n        setEditOpen(false);\r\n        getModels();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setEditOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setEditOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleCreate = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(`/deskModel/create`, { name })\r\n      .then((response) => {\r\n        // handle success\r\n        setCreateOpen(false);\r\n        getModels();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setCreateOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setCreateOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getModels = (cancelToken) => {\r\n    axios\r\n      .get('/deskModel', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setModels(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    getModels(source.token);\r\n    return () => source.cancel('Model Component got unmounted');\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        onClick={() => {\r\n          setName('');\r\n          setCreateOpen(true);\r\n        }}\r\n      >\r\n        Add New Model\r\n      </Button>\r\n      <DataGrid\r\n        rows={models.map(({ id, ...restProps }, index) => ({\r\n          id: index,\r\n          ...restProps,\r\n        }))}\r\n        columns={columns}\r\n        onEditClick={handleEditClick}\r\n        onRemoveClick={handleRemoveClick}\r\n        onBulkRemoveClick={handleBulkRemoveClick}\r\n      ></DataGrid>\r\n      <Dialog open={editOpen}>\r\n        <DialogTitle>Edit ChairModel</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Edit the ChairModel and Click Save button.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Name\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setEditOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog open={createOpen}>\r\n        <DialogTitle>Edit ChairModel</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Input ChairModel Name and Click Save button.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Name\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setCreateOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCreate}>Create</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n});\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Autocomplete,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Paper,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Email as EmailIcon,\r\n  PictureAsPdf as PictureAsPdfIcon,\r\n  WhatsApp as WhatsAppIcon,\r\n} from '@mui/icons-material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiPhoneNumber from 'material-ui-phone-number';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport QRCode from 'react-qr-code';\r\n\r\nimport DataGrid from 'components/Common/DataGrid';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'invoiceNum',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Invoice',\r\n  },\r\n  {\r\n    id: 'clientName',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Client Name',\r\n  },\r\n  {\r\n    id: 'clientAddress',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Client Address',\r\n  },\r\n  {\r\n    id: 'salesmanName',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Salesman Name',\r\n  },\r\n  {\r\n    id: 'orderDate',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Order Date',\r\n  },\r\n  {\r\n    id: 'QTY',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'QTY',\r\n  },\r\n];\r\n\r\nfunction mapStateToProps(state) {\r\n  const { auth } = state;\r\n  return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)((props) => {\r\n  const theme = useTheme();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [createOpen, setCreateOpen] = useState(false);\r\n  const [whatsAppOpen, setWhatsAppOpen] = useState(false);\r\n  const [emailOpen, setEmailOpen] = useState(false);\r\n  const whatsAppMessage = useRef(null);\r\n  const emailContent = useRef(null);\r\n  const [id, setID] = useState('');\r\n  const [models, setModels] = useState([]);\r\n  const [colors, setColors] = useState([]);\r\n  const [deskRemarks, setDeskRemarks] = useState(['av', 'avas']);\r\n\r\n  const [clientName, setClientName] = useState('');\r\n  const [clientEmail, setClientEmail] = useState('');\r\n  const [clientPhone, setClientPhone] = useState('');\r\n  const [clientDistrict, setClientDistrict] = useState('');\r\n  const [clientStreet, setClientStreet] = useState('');\r\n  const [clientBlock, setClientBlock] = useState('');\r\n  const [clientFloor, setClientFloor] = useState('');\r\n  const [clientUnit, setClientUnit] = useState('');\r\n  const [deliveryDate, setDeliveryDate] = useState(new Date());\r\n  const [remark, setRemark] = useState('');\r\n\r\n  const [model, setModel] = useState(null);\r\n  const [color, setColor] = useState(null);\r\n  const [armSize, setArmSize] = useState('');\r\n  const [feetSize, setFeetSize] = useState('');\r\n  const [beam, setBeam] = useState('');\r\n  const [akInfo, setAkInfo] = useState('');\r\n  const [woodInfo_1, setWoodInfo_1] = useState('');\r\n  const [woodInfo_2, setWoodInfo_2] = useState('');\r\n  const [melamineInfo, setMelamineInfo] = useState('');\r\n  const [laminateInfo, setLaminateInfo] = useState('');\r\n  const [bambooInfo, setBambooInfo] = useState('');\r\n  const [deskRemark, setDeskRemark] = useState('');\r\n  const [QTY, setQTY] = useState(1);\r\n\r\n  const extraLinks = [\r\n    (id) => {\r\n      return (\r\n        <IconButton\r\n          component={Link}\r\n          to={`/chairinvoice/${orders[id].id}`}\r\n          target=\"_blank\"\r\n        >\r\n          <PictureAsPdfIcon />\r\n        </IconButton>\r\n      );\r\n    },\r\n    (id) => {\r\n      return (\r\n        <IconButton\r\n          onClick={() => {\r\n            setClientEmail(orders[id].clientEmail);\r\n            setEmailOpen(true);\r\n          }}\r\n        >\r\n          <EmailIcon />\r\n        </IconButton>\r\n      );\r\n    },\r\n    (id) => {\r\n      return (\r\n        <IconButton\r\n          onClick={() => {\r\n            axios\r\n              .get('whatsapp/checkauth')\r\n              .then(() => {\r\n                setClientPhone(orders[id].clientPhone);\r\n                setWhatsAppOpen(true);\r\n              })\r\n              .catch(function (error) {\r\n                // handle error\r\n                axios\r\n                  .get('whatsapp/getqr')\r\n                  .then((response) => {\r\n                    Swal.fire({\r\n                      icon: 'info',\r\n                      title:\r\n                        'Please signin with this QRCode and Click the button again.',\r\n                      html: ReactDOMServer.renderToStaticMarkup(\r\n                        <QRCode\r\n                          value={`${response.data.qrcode}`}\r\n                          level=\"H\"\r\n                        ></QRCode>\r\n                      ),\r\n                      allowOutsideClick: false,\r\n                    });\r\n                  })\r\n                  .catch(function (qrerror) {\r\n                    // handle error\r\n                    Swal.fire({\r\n                      icon: 'error',\r\n                      title: 'Error',\r\n                      text: 'Unable to use WhatsApp Messaging.',\r\n                      allowOutsideClick: false,\r\n                    });\r\n                  })\r\n                  .then(function () {\r\n                    // always executed\r\n                  });\r\n              })\r\n              .then(function () {\r\n                // always executed\r\n              });\r\n          }}\r\n        >\r\n          <WhatsAppIcon />\r\n        </IconButton>\r\n      );\r\n    },\r\n  ];\r\n\r\n  const handleWhatsAppSend = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post('whatsapp/send', {\r\n        phone: clientPhone,\r\n        message: whatsAppMessage.current.value,\r\n      })\r\n      .then(() => {\r\n        setWhatsAppOpen(false);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setWhatsAppOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setWhatsAppOpen(true);\r\n        });\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleEmailSend = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post('email/send', {\r\n        email: clientEmail,\r\n        message: emailContent.current.value,\r\n      })\r\n      .then(() => {\r\n        setEmailOpen(false);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setEmailOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setEmailOpen(true);\r\n        });\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleEditClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < orders.length && index >= 0) {\r\n      getModels();\r\n      getColors();\r\n      getDeskRemarks();\r\n      setID(orders[index].id);\r\n      setModel(orders[index].stock.deskModel);\r\n      setColor(orders[index].stock.color);\r\n      setArmSize(orders[index].stock.armSize);\r\n      setFeetSize(orders[index].stock.feetSize);\r\n      setBeam(orders[index].stock.beam);\r\n      setAkInfo(orders[index].stock.akInfo);\r\n      setWoodInfo_1(orders[index].stock.woodInfo_1);\r\n      setWoodInfo_2(orders[index].stock.woodInfo_2);\r\n      setMelamineInfo(orders[index].stock.melamineInfo);\r\n      setLaminateInfo(orders[index].stock.laminateInfo);\r\n      setBambooInfo(orders[index].stock.bambooInfo);\r\n      setDeskRemark(orders[index].stock.deskRemark);\r\n      setClientName(orders[index].clientName);\r\n      setClientEmail(orders[index].clientEmail);\r\n      setClientPhone(orders[index].clientPhone);\r\n      setClientDistrict(orders[index].clientDistrict);\r\n      setClientStreet(orders[index].clientStreet);\r\n      setClientBlock(orders[index].clientBlock);\r\n      setClientFloor(orders[index].clientFloor);\r\n      setClientUnit(orders[index].clientUnit);\r\n      setRemark(orders[index].clientRemark);\r\n      const deliveryDate = new Date(orders[index].deliveryDate);\r\n      deliveryDate.setMinutes(\r\n        deliveryDate.getMinutes() - deliveryDate.getTimezoneOffset()\r\n      );\r\n      setDeliveryDate(deliveryDate.toISOString().split('T')[0]);\r\n      setQTY(orders[index].QTY);\r\n      setEditOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleRemoveClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < orders.length && index >= 0) {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: 'This action will remove current DeskStock permanently.',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, Remove!',\r\n        cancelButtonText: 'No, Keep It.',\r\n        allowOutsideClick: false,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          axios\r\n            .delete(`/deskOrder/${orders[index].id}`)\r\n            .then((response) => {\r\n              // handle success\r\n              getOrders();\r\n            })\r\n            .catch(function (error) {\r\n              // handle error\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error.response.data.message,\r\n                allowOutsideClick: false,\r\n              });\r\n              console.log(error);\r\n            })\r\n            .then(function () {\r\n              // always executed\r\n            });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkRemoveClick = (selected) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'This action will remove selected Brands permanently.',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Remove!',\r\n      cancelButtonText: 'No, Keep Them.',\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete('/chiarstock', { data: { ids: selected } })\r\n          .then((response) => {\r\n            // handle success\r\n            getOrders();\r\n          })\r\n          .catch(function (error) {\r\n            // handle error\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: error.response.data.message,\r\n              allowOutsideClick: false,\r\n            });\r\n            console.log(error);\r\n          })\r\n          .then(function () {\r\n            // always executed\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSave = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .put(`/deskOrder/${id}`, {\r\n        deskModelId: model ? model.id : null,\r\n        colorId: color ? color.id : null,\r\n        armSize,\r\n        feetSize,\r\n        beam,\r\n        akInfo,\r\n        woodInfo_1,\r\n        woodInfo_2,\r\n        melamineInfo,\r\n        laminateInfo,\r\n        bambooInfo,\r\n        deskRemark,\r\n        clientName,\r\n        clientEmail,\r\n        clientPhone,\r\n        clientDistrict,\r\n        clientStreet,\r\n        clientBlock,\r\n        clientFloor,\r\n        clientUnit,\r\n        deliveryDate,\r\n        remark,\r\n        QTY,\r\n      })\r\n      .then((response) => {\r\n        // handle success\r\n        setEditOpen(false);\r\n        getOrders();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setEditOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setEditOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleCreate = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(`/deskOrder/create`, {\r\n        deskModelId: model ? model.id : null,\r\n        colorId: color ? color.id : null,\r\n        armSize,\r\n        feetSize,\r\n        beam,\r\n        akInfo,\r\n        woodInfo_1,\r\n        woodInfo_2,\r\n        melamineInfo,\r\n        laminateInfo,\r\n        bambooInfo,\r\n        deskRemark,\r\n        clientName,\r\n        clientEmail,\r\n        clientPhone,\r\n        clientDistrict,\r\n        clientStreet,\r\n        clientBlock,\r\n        clientFloor,\r\n        clientUnit,\r\n        deliveryDate,\r\n        remark,\r\n        QTY,\r\n      })\r\n      .then((response) => {\r\n        // handle success\r\n        setCreateOpen(false);\r\n        getOrders();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setCreateOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setCreateOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getModels = (cancelToken) => {\r\n    axios\r\n      .get('/deskModel', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setModels(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getOrders = (cancelToken) => {\r\n    axios\r\n      .get('/deskOrder', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setOrders(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getColors = (cancelToken) => {\r\n    axios\r\n      .get('/productColor', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setColors(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getDeskRemarks = (cancelToken) => {\r\n    // axios\r\n    //   .get('/deskremark', { cancelToken })\r\n    //   .then((response) => {\r\n    //     // handle success\r\n    //     setDeskRemarks(response.data.map((item) => item.detail));\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     // handle error\r\n    //     console.log(error);\r\n    //   })\r\n    //   .then(function () {\r\n    //     // always executed\r\n    //   });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    getOrders(source.token);\r\n    return () => source.cancel('Brand Component got unmounted');\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        onClick={() => {\r\n          getModels();\r\n          getColors();\r\n          getDeskRemarks();\r\n          setModel(null);\r\n          setColor(null);\r\n          setArmSize('');\r\n          setFeetSize('');\r\n          setBeam('');\r\n          setAkInfo('');\r\n          setWoodInfo_1('');\r\n          setWoodInfo_2('');\r\n          setMelamineInfo('');\r\n          setLaminateInfo('');\r\n          setBambooInfo('');\r\n          setDeskRemark('');\r\n          setClientName('');\r\n          setClientEmail('');\r\n          setClientPhone('');\r\n          setClientDistrict('');\r\n          setClientStreet('');\r\n          setClientBlock('');\r\n          setClientFloor('');\r\n          setClientUnit('');\r\n          const now = new Date();\r\n          now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\r\n          setDeliveryDate(now.toISOString().split('T')[0]);\r\n          setRemark('');\r\n          setQTY(1);\r\n          setCreateOpen(true);\r\n        }}\r\n      >\r\n        Add New Order\r\n      </Button>\r\n      <DataGrid\r\n        title=\"Desk Orders\"\r\n        rows={orders.map(\r\n          (\r\n            {\r\n              id,\r\n              clientDistrict,\r\n              clientStreet,\r\n              clientBlock,\r\n              clientFloor,\r\n              clientUnit,\r\n              salesman,\r\n              createdAt,\r\n              ...restProps\r\n            },\r\n            index\r\n          ) => ({\r\n            id: index,\r\n            salesmanName: (salesman.firstName || '').concat(\r\n              ' ',\r\n              salesman.lastName || ''\r\n            ),\r\n            orderDate: (() => {\r\n              const createdTime = new Date(createdAt);\r\n              createdTime.setMinutes(\r\n                createdTime.getMinutes() - createdTime.getTimezoneOffset()\r\n              );\r\n              return createdTime.toISOString().split('T')[0];\r\n            })(),\r\n            clientAddress: [\r\n              clientDistrict,\r\n              clientStreet,\r\n              clientBlock,\r\n              clientFloor,\r\n              clientUnit,\r\n            ].join(', '),\r\n            ...restProps,\r\n          })\r\n        )}\r\n        columns={columns}\r\n        extraLinks={extraLinks}\r\n        onEditClick={handleEditClick}\r\n        onRemoveClick={handleRemoveClick}\r\n        onBulkRemoveClick={handleBulkRemoveClick}\r\n      ></DataGrid>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={editOpen}\r\n      >\r\n        <DialogTitle>Edit DeskOrder</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Desk Features\r\n              </Typography>\r\n              {[\r\n                {\r\n                  value: model,\r\n                  values: models,\r\n                  setValue: setModel,\r\n                  label: 'DeskModel',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: color,\r\n                  values: colors,\r\n                  setValue: setColor,\r\n                  label: 'DeskColor',\r\n                  width: '48%',\r\n                },\r\n              ].map(({ value, values, setValue, label, width }, index) => (\r\n                <Autocomplete\r\n                  key={index}\r\n                  disablePortal\r\n                  value={value ? value : null}\r\n                  onChange={(event, newValue) => {\r\n                    event.preventDefault();\r\n                    setValue(newValue);\r\n                  }}\r\n                  options={values}\r\n                  getOptionLabel={(option) => option.name}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label={label}\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              ))}\r\n              {[\r\n                {\r\n                  label: 'Arm Size',\r\n                  value: armSize,\r\n                  setValue: setArmSize,\r\n                  type: 'number',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Feet Size',\r\n                  value: feetSize,\r\n                  setValue: setFeetSize,\r\n                  type: 'number',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Beam',\r\n                  value: beam,\r\n                  setValue: setBeam,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'AK Info',\r\n                  value: akInfo,\r\n                  setValue: setAkInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Wood Info 1',\r\n                  value: woodInfo_1,\r\n                  setValue: setWoodInfo_1,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Wood Info 2',\r\n                  value: woodInfo_2,\r\n                  setValue: setWoodInfo_2,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Melamine Info',\r\n                  value: melamineInfo,\r\n                  setValue: setMelamineInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Laminate Info',\r\n                  value: laminateInfo,\r\n                  setValue: setLaminateInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Bamboo Info',\r\n                  value: bambooInfo,\r\n                  setValue: setBambooInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n              ].map(({ label, value, setValue, type, width }, index) => (\r\n                <TextField\r\n                  key={index}\r\n                  label={label}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  value={value}\r\n                  type={type}\r\n                  onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                  }}\r\n                />\r\n              ))}\r\n              <Autocomplete\r\n                disablePortal\r\n                freeSolo\r\n                value={deskRemark}\r\n                onChange={(event, newValue) => {\r\n                  event.preventDefault();\r\n                  setDeskRemark(newValue);\r\n                }}\r\n                options={deskRemarks}\r\n                fullWidth\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Desk Remark\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setDeskRemark(event.target.value);\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Paper>\r\n            <Paper\r\n              sx={{\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Client Info\r\n              </Typography>\r\n              {[\r\n                {\r\n                  label: 'Name',\r\n                  value: clientName,\r\n                  setValue: setClientName,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n                {\r\n                  label: 'Email',\r\n                  value: clientEmail,\r\n                  setValue: setClientEmail,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Phone',\r\n                  value: clientPhone,\r\n                  setValue: setClientPhone,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'District',\r\n                  value: clientDistrict,\r\n                  setValue: setClientDistrict,\r\n                  type: 'text',\r\n                  width: '55%',\r\n                },\r\n                {\r\n                  label: 'Street',\r\n                  value: clientStreet,\r\n                  setValue: setClientStreet,\r\n                  type: 'text',\r\n                  width: '40%',\r\n                },\r\n                {\r\n                  label: 'Block',\r\n                  value: clientBlock,\r\n                  setValue: setClientBlock,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Floor',\r\n                  value: clientFloor,\r\n                  setValue: setClientFloor,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Unit',\r\n                  value: clientUnit,\r\n                  setValue: setClientUnit,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Delivery Date',\r\n                  value: deliveryDate,\r\n                  setValue: setDeliveryDate,\r\n                  type: 'date',\r\n                  width: '100%',\r\n                  InputLabelProps: { shrink: true },\r\n                },\r\n                {\r\n                  label: 'Remark',\r\n                  value: remark,\r\n                  setValue: setRemark,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n              ].map((item, index) =>\r\n                item.label === 'Phone' ? (\r\n                  <MuiPhoneNumber\r\n                    key={index}\r\n                    defaultCountry={'hk'}\r\n                    value={item.value}\r\n                    onChange={(value) => {\r\n                      item.setValue(value);\r\n                    }}\r\n                    label={item.label}\r\n                    sx={{ flexBasis: item.width, minWidth: item.width }}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                  />\r\n                ) : (\r\n                  <TextField\r\n                    key={index}\r\n                    margin=\"dense\"\r\n                    label={item.label}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    value={item.value}\r\n                    type={item.type}\r\n                    onChange={(e) => {\r\n                      item.setValue(e.target.value);\r\n                    }}\r\n                    sx={{ flexBasis: item.width, minWidth: item.width }}\r\n                  />\r\n                )\r\n              )}\r\n            </Paper>\r\n            <TextField\r\n              label=\"QTY\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={QTY}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setQTY(e.target.value);\r\n              }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setEditOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={createOpen}\r\n      >\r\n        <DialogTitle>Create DeskOrder</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Desk Features\r\n              </Typography>\r\n              {[\r\n                {\r\n                  value: model,\r\n                  values: models,\r\n                  setValue: setModel,\r\n                  label: 'DeskModel',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: color,\r\n                  values: colors,\r\n                  setValue: setColor,\r\n                  label: 'DeskColor',\r\n                  width: '48%',\r\n                },\r\n              ].map(({ value, values, setValue, label, width }, index) => (\r\n                <Autocomplete\r\n                  key={index}\r\n                  disablePortal\r\n                  value={value ? value : null}\r\n                  onChange={(event, newValue) => {\r\n                    event.preventDefault();\r\n                    setValue(newValue);\r\n                  }}\r\n                  options={values}\r\n                  getOptionLabel={(option) => option.name}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label={label}\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              ))}\r\n              {[\r\n                {\r\n                  label: 'Arm Size',\r\n                  value: armSize,\r\n                  setValue: setArmSize,\r\n                  type: 'number',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Feet Size',\r\n                  value: feetSize,\r\n                  setValue: setFeetSize,\r\n                  type: 'number',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Beam',\r\n                  value: beam,\r\n                  setValue: setBeam,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'AK Info',\r\n                  value: akInfo,\r\n                  setValue: setAkInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Wood Info 1',\r\n                  value: woodInfo_1,\r\n                  setValue: setWoodInfo_1,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Wood Info 2',\r\n                  value: woodInfo_2,\r\n                  setValue: setWoodInfo_2,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Melamine Info',\r\n                  value: melamineInfo,\r\n                  setValue: setMelamineInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Laminate Info',\r\n                  value: laminateInfo,\r\n                  setValue: setLaminateInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Bamboo Info',\r\n                  value: bambooInfo,\r\n                  setValue: setBambooInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n              ].map(({ label, value, setValue, type, width }, index) => (\r\n                <TextField\r\n                  key={index}\r\n                  label={label}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  value={value}\r\n                  type={type}\r\n                  onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                  }}\r\n                />\r\n              ))}\r\n              <Autocomplete\r\n                disablePortal\r\n                freeSolo\r\n                value={deskRemark}\r\n                onChange={(event, newValue) => {\r\n                  event.preventDefault();\r\n                  setDeskRemark(newValue);\r\n                }}\r\n                options={deskRemarks}\r\n                fullWidth\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Desk Remark\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setDeskRemark(event.target.value);\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Paper>\r\n            <Paper\r\n              sx={{\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Client Info\r\n              </Typography>\r\n              {[\r\n                {\r\n                  label: 'Name',\r\n                  value: clientName,\r\n                  setValue: setClientName,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n                {\r\n                  label: 'Email',\r\n                  value: clientEmail,\r\n                  setValue: setClientEmail,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Phone',\r\n                  value: clientPhone,\r\n                  setValue: setClientPhone,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'District',\r\n                  value: clientDistrict,\r\n                  setValue: setClientDistrict,\r\n                  type: 'text',\r\n                  width: '55%',\r\n                },\r\n                {\r\n                  label: 'Street',\r\n                  value: clientStreet,\r\n                  setValue: setClientStreet,\r\n                  type: 'text',\r\n                  width: '40%',\r\n                },\r\n                {\r\n                  label: 'Block',\r\n                  value: clientBlock,\r\n                  setValue: setClientBlock,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Floor',\r\n                  value: clientFloor,\r\n                  setValue: setClientFloor,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Unit',\r\n                  value: clientUnit,\r\n                  setValue: setClientUnit,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Delivery Date',\r\n                  value: deliveryDate,\r\n                  setValue: setDeliveryDate,\r\n                  type: 'date',\r\n                  width: '100%',\r\n                  InputLabelProps: { shrink: true },\r\n                },\r\n                {\r\n                  label: 'Remark',\r\n                  value: remark,\r\n                  setValue: setRemark,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n              ].map((item, index) =>\r\n                item.label === 'Phone' ? (\r\n                  <MuiPhoneNumber\r\n                    key={index}\r\n                    defaultCountry={'hk'}\r\n                    value={item.value}\r\n                    onChange={(value) => {\r\n                      item.setValue(value);\r\n                    }}\r\n                    label={item.label}\r\n                    sx={{ flexBasis: item.width, minWidth: item.width }}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                  />\r\n                ) : (\r\n                  <TextField\r\n                    key={index}\r\n                    margin=\"dense\"\r\n                    label={item.label}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    value={item.value}\r\n                    type={item.type}\r\n                    onChange={(e) => {\r\n                      item.setValue(e.target.value);\r\n                    }}\r\n                    sx={{ flexBasis: item.width, minWidth: item.width }}\r\n                  />\r\n                )\r\n              )}\r\n            </Paper>\r\n            <TextField\r\n              label=\"QTY\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={QTY}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setQTY(e.target.value);\r\n              }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              setCreateOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCreate}>Create</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={whatsAppOpen}\r\n      >\r\n        <DialogTitle>Send WhatsApp Message to the Client</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <MuiPhoneNumber\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Phone Number\"\r\n              defaultCountry={'hk'}\r\n              value={clientPhone}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              inputRef={whatsAppMessage}\r\n              label=\"Message\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              defaultValue={`Hello ${clientName},\\nThank you for your order! Please find here (payment link URL) for your payment. Once finished, your order will be processed.\\nOnce finished, your order will be processed accordingly.`}\r\n              multiline\r\n              minRows={4}\r\n              maxRows={10}\r\n              // onChange={(e) => {\r\n              //   setWhatsAppMessage(e.target.value);\r\n              // }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              setWhatsAppOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleWhatsAppSend}>Send</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={emailOpen}\r\n      >\r\n        <DialogTitle>Send Email to the Client</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <TextField\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={clientEmail}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              inputRef={emailContent}\r\n              label=\"Message\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              defaultValue={`Hello ${clientName},\\nThank you for your order! Please find here (payment link URL) for your payment. Once finished, your order will be processed.\\nOnce finished, your order will be processed accordingly.`}\r\n              multiline\r\n              minRows={4}\r\n              maxRows={10}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              setEmailOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleEmailSend}>Send</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Autocomplete,\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Fade,\r\n  Paper,\r\n  Popper,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { Add as AddIcon } from '@mui/icons-material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport DataGrid from 'components/Common/DataGrid';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'id',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Id',\r\n  },\r\n  {\r\n    id: 'deskModel',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Model',\r\n  },\r\n  {\r\n    id: 'color',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Color',\r\n  },\r\n  {\r\n    id: 'armSize',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Arm Size',\r\n  },\r\n  {\r\n    id: 'feetSize',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Feet Size',\r\n  },\r\n  {\r\n    id: 'beam',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Beam',\r\n  },\r\n  {\r\n    id: 'akInfo',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'AK',\r\n  },\r\n  {\r\n    id: 'woodInfo_1',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Wood 1',\r\n  },\r\n  {\r\n    id: 'woodInfo_2',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Wood 2',\r\n  },\r\n  {\r\n    id: 'melamineInfo',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Melamine',\r\n  },\r\n  {\r\n    id: 'laminateInfo',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Laminate',\r\n  },\r\n  {\r\n    id: 'bambooInfo',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Bamboo',\r\n  },\r\n  {\r\n    id: 'deskRemark',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Desk Remark',\r\n  },\r\n  {\r\n    id: 'QTY',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'QTY',\r\n  },\r\n];\r\n\r\nfunction mapStateToProps(state) {\r\n  const { auth } = state;\r\n  return { auth };\r\n}\r\n\r\nconst Stock = connect(mapStateToProps)((props) => {\r\n  const theme = useTheme();\r\n\r\n  const [stocks, setStocks] = useState([]);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [createOpen, setCreateOpen] = useState(false);\r\n  const [id, setID] = useState('');\r\n  const [models, setModels] = useState([]);\r\n  const [colors, setColors] = useState([]);\r\n  const [deskRemarks, setDeskRemarks] = useState(['av', 'avas']);\r\n\r\n  const [filterModel, setFilterModel] = useState('');\r\n  const [filterColor, setFilterColor] = useState('');\r\n  const [filterBeam, setFilterBeam] = useState('');\r\n  const [filterAKInfo, setFilterAKInfo] = useState('');\r\n  const [filterWoodInfo_1, setFilterWoodInfo_1] = useState('');\r\n  const [filterWoodInfo_2, setFilterWoodInfo_2] = useState('');\r\n  const [filterMelamineInfo, setFilterMelamineInfo] = useState('');\r\n  const [filterLaminateInfo, setFilterLaminateInfo] = useState('');\r\n  const [filterBambooInfo, setFilterBambooInfo] = useState('');\r\n\r\n  const [filterAnchor, setFilterAnchor] = useState(null);\r\n\r\n  const [model, setModel] = useState(null);\r\n  const [color, setColor] = useState(null);\r\n  const [armSize, setArmSize] = useState('');\r\n  const [feetSize, setFeetSize] = useState('');\r\n  const [beam, setBeam] = useState('');\r\n  const [akInfo, setAkInfo] = useState('');\r\n  const [woodInfo_1, setWoodInfo_1] = useState('');\r\n  const [woodInfo_2, setWoodInfo_2] = useState('');\r\n  const [melamineInfo, setMelamineInfo] = useState('');\r\n  const [laminateInfo, setLaminateInfo] = useState('');\r\n  const [bambooInfo, setBambooInfo] = useState('');\r\n  const [deskRemark, setDeskRemark] = useState('');\r\n  const [QTY, setQTY] = useState(0);\r\n\r\n  const handleFilterClick = (e) => {\r\n    e.preventDefault();\r\n    if (filterAnchor === null) setFilterAnchor(e.currentTarget);\r\n    else setFilterAnchor(null);\r\n  };\r\n\r\n  const handleEditClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < stocks.length && index >= 0) {\r\n      getModels();\r\n      getColors();\r\n      getDeskRemarks();\r\n      setID(stocks[index].id);\r\n      setModel(stocks[index].deskModel);\r\n      setColor(stocks[index].color);\r\n      setArmSize(stocks[index].armSize);\r\n      setFeetSize(stocks[index].feetSize);\r\n      setBeam(stocks[index].beam);\r\n      setAkInfo(stocks[index].akInfo);\r\n      setWoodInfo_1(stocks[index].woodInfo_1);\r\n      setWoodInfo_2(stocks[index].woodInfo_2);\r\n      setMelamineInfo(stocks[index].melamineInfo);\r\n      setLaminateInfo(stocks[index].laminateInfo);\r\n      setBambooInfo(stocks[index].bambooInfo);\r\n      setDeskRemark(stocks[index].deskRemark);\r\n      setQTY(stocks[index].QTY);\r\n    }\r\n    setEditOpen(true);\r\n  };\r\n\r\n  const handleRemoveClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < stocks.length && index >= 0) {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: 'This action will remove current DeskStock permanently.',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, Remove!',\r\n        cancelButtonText: 'No, Keep It.',\r\n        allowOutsideClick: false,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          axios\r\n            .delete(`/deskStock/${stocks[index].id}`)\r\n            .then((response) => {\r\n              // handle success\r\n              getStocks();\r\n            })\r\n            .catch(function (error) {\r\n              // handle error\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error.response.data.message,\r\n                allowOutsideClick: false,\r\n              });\r\n              console.log(error);\r\n            })\r\n            .then(function () {\r\n              // always executed\r\n            });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkRemoveClick = (selected) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'This action will remove selected DeskStocks permanently.',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Remove!',\r\n      cancelButtonText: 'No, Keep Them.',\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete('/deskStock', { data: { ids: selected } })\r\n          .then((response) => {\r\n            // handle success\r\n            getStocks();\r\n          })\r\n          .catch(function (error) {\r\n            // handle error\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: error.response.data.message,\r\n              allowOutsideClick: false,\r\n            });\r\n            console.log(error);\r\n          })\r\n          .then(function () {\r\n            // always executed\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSave = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .put(`/deskStock/${id}`, {\r\n        deskModelId: model ? model.id : null,\r\n        colorId: color ? color.id : null,\r\n        armSize,\r\n        feetSize,\r\n        beam,\r\n        akInfo,\r\n        woodInfo_1,\r\n        woodInfo_2,\r\n        melamineInfo,\r\n        laminateInfo,\r\n        bambooInfo,\r\n        deskRemark,\r\n        QTY,\r\n      })\r\n      .then((response) => {\r\n        // handle success\r\n        setEditOpen(false);\r\n        getStocks();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setEditOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setEditOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleCreate = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(`/deskStock/create`, {\r\n        deskModelId: model ? model.id : null,\r\n        colorId: color ? color.id : null,\r\n        armSize,\r\n        feetSize,\r\n        beam,\r\n        akInfo,\r\n        woodInfo_1,\r\n        woodInfo_2,\r\n        melamineInfo,\r\n        laminateInfo,\r\n        bambooInfo,\r\n        deskRemark,\r\n        QTY,\r\n      })\r\n      .then((response) => {\r\n        // handle success\r\n        setCreateOpen(false);\r\n        getStocks();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setCreateOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setCreateOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getModels = (cancelToken) => {\r\n    axios\r\n      .get('/deskModel', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setModels(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getColors = (cancelToken) => {\r\n    axios\r\n      .get('/productColor', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setColors(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getDeskRemarks = (cancelToken) => {\r\n    // axios\r\n    //   .get('/deskremark', { cancelToken })\r\n    //   .then((response) => {\r\n    //     // handle success\r\n    //     setDeskRemarks(response.data.map((item) => item.detail));\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     // handle error\r\n    //     console.log(error);\r\n    //   })\r\n    //   .then(function () {\r\n    //     // always executed\r\n    //   });\r\n  };\r\n\r\n  const getStocks = (cancelToken) => {\r\n    axios\r\n      .get('/deskStock', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setStocks(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    getStocks(source.token);\r\n    return () => source.cancel('Stock Component got unmounted');\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        onClick={() => {\r\n          getModels();\r\n          getColors();\r\n          getDeskRemarks();\r\n          setModel(null);\r\n          setColor(null);\r\n          setArmSize('');\r\n          setFeetSize('');\r\n          setBeam('');\r\n          setAkInfo('');\r\n          setWoodInfo_1('');\r\n          setWoodInfo_2('');\r\n          setMelamineInfo('');\r\n          setLaminateInfo('');\r\n          setBambooInfo('');\r\n          setDeskRemark('');\r\n          setQTY(0);\r\n          setCreateOpen(true);\r\n        }}\r\n      >\r\n        Add New Stock\r\n      </Button>\r\n      <DataGrid\r\n        title=\"Desk Stocks\"\r\n        rows={stocks\r\n          .map(({ id, deskModel, color, ...restProps }, index) => ({\r\n            id: index,\r\n            deskModel: deskModel ? deskModel.name : null,\r\n            color: color ? color.name : null,\r\n            ...restProps,\r\n          }))\r\n          .filter(\r\n            (item, key) =>\r\n              (item.deskModel || '')\r\n                .toLowerCase()\r\n                .includes(filterModel.toLowerCase()) &&\r\n              (item.color || '')\r\n                .toLowerCase()\r\n                .includes(filterColor.toLowerCase()) &&\r\n              (item.beam || '')\r\n                .toLowerCase()\r\n                .includes(filterBeam.toLowerCase()) &&\r\n              (item.akInfo || '')\r\n                .toLowerCase()\r\n                .includes(filterAKInfo.toLowerCase()) &&\r\n              (item.woodInfo_1 || '')\r\n                .toLowerCase()\r\n                .includes(filterWoodInfo_1.toLowerCase()) &&\r\n              (item.woodInfo_2 || '')\r\n                .toLowerCase()\r\n                .includes(filterWoodInfo_2.toLowerCase()) &&\r\n              (item.melamineInfo || '')\r\n                .toLowerCase()\r\n                .includes(filterMelamineInfo.toLowerCase()) &&\r\n              (item.laminateInfo || '')\r\n                .toLowerCase()\r\n                .includes(filterLaminateInfo.toLowerCase()) &&\r\n              (item.bambooInfo || '')\r\n                .toLowerCase()\r\n                .includes(filterBambooInfo.toLowerCase())\r\n          )}\r\n        columns={columns}\r\n        onEditClick={handleEditClick}\r\n        onRemoveClick={handleRemoveClick}\r\n        onBulkRemoveClick={handleBulkRemoveClick}\r\n        onFilterClick={handleFilterClick}\r\n      />\r\n      <Popper\r\n        anchorEl={filterAnchor}\r\n        open={Boolean(filterAnchor)}\r\n        placement={'bottom-end'}\r\n        disablePortal={false}\r\n        transition\r\n        onClose={() => {\r\n          setFilterAnchor(null);\r\n        }}\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                maxWidth: 400,\r\n                // maxWidth: '100%',\r\n              }}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                flexWrap=\"wrap\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                {[\r\n                  {\r\n                    value: filterModel,\r\n                    setValue: setFilterModel,\r\n                    label: 'Model',\r\n                    width: '30%',\r\n                  },\r\n                  {\r\n                    value: filterColor,\r\n                    setValue: setFilterColor,\r\n                    label: 'Color',\r\n                    width: '30%',\r\n                  },\r\n                  {\r\n                    value: filterBeam,\r\n                    setValue: setFilterBeam,\r\n                    label: 'Beam',\r\n                    width: '30%',\r\n                  },\r\n                  {\r\n                    value: filterAKInfo,\r\n                    setValue: setFilterAKInfo,\r\n                    label: 'AK',\r\n                    width: '30%',\r\n                  },\r\n                  {\r\n                    value: filterWoodInfo_1,\r\n                    setValue: setFilterWoodInfo_1,\r\n                    label: 'Wood 1',\r\n                    width: '30%',\r\n                  },\r\n                  {\r\n                    value: filterWoodInfo_2,\r\n                    setValue: setFilterWoodInfo_2,\r\n                    label: 'Wood 2',\r\n                    width: '30%',\r\n                  },\r\n                  {\r\n                    value: filterMelamineInfo,\r\n                    setValue: setFilterMelamineInfo,\r\n                    label: 'Melamine',\r\n                    width: '30%',\r\n                  },\r\n                  {\r\n                    value: filterLaminateInfo,\r\n                    setValue: setFilterLaminateInfo,\r\n                    label: 'Laminate',\r\n                    width: '30%',\r\n                  },\r\n                  {\r\n                    value: filterBambooInfo,\r\n                    setValue: setFilterBambooInfo,\r\n                    label: 'Bamboo',\r\n                    width: '30%',\r\n                  },\r\n                ].map(({ value, values, setValue, label, width }, index) => (\r\n                  <TextField\r\n                    key={index}\r\n                    sx={{ flexBasis: width, minWidth: width }}\r\n                    value={value}\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setValue(event.target.value);\r\n                    }}\r\n                    margin=\"dense\"\r\n                    label={label}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                ))}\r\n              </Box>\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Button\r\n                  onClick={() => {\r\n                    setFilterModel('');\r\n                    setFilterColor('');\r\n                  }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  Clear\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    setFilterAnchor(null);\r\n                  }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  OK\r\n                </Button>\r\n              </Box>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={editOpen}\r\n      >\r\n        <DialogTitle>Edit DeskStock</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Desk Features\r\n              </Typography>\r\n              {[\r\n                {\r\n                  value: model,\r\n                  values: models,\r\n                  setValue: setModel,\r\n                  label: 'DeskModel',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: color,\r\n                  values: colors,\r\n                  setValue: setColor,\r\n                  label: 'DeskColor',\r\n                  width: '48%',\r\n                },\r\n              ].map(({ value, values, setValue, label, width }, index) => (\r\n                <Autocomplete\r\n                  key={index}\r\n                  disablePortal\r\n                  value={value ? value : null}\r\n                  onChange={(event, newValue) => {\r\n                    event.preventDefault();\r\n                    setValue(newValue);\r\n                  }}\r\n                  options={values}\r\n                  getOptionLabel={(option) => option.name}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label={label}\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              ))}\r\n              {[\r\n                {\r\n                  label: 'Arm Size',\r\n                  value: armSize,\r\n                  setValue: setArmSize,\r\n                  type: 'number',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Feet Size',\r\n                  value: feetSize,\r\n                  setValue: setFeetSize,\r\n                  type: 'number',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Beam',\r\n                  value: beam,\r\n                  setValue: setBeam,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'AK Info',\r\n                  value: akInfo,\r\n                  setValue: setAkInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Wood Info 1',\r\n                  value: woodInfo_1,\r\n                  setValue: setWoodInfo_1,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Wood Info 2',\r\n                  value: woodInfo_2,\r\n                  setValue: setWoodInfo_2,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Melamine Info',\r\n                  value: melamineInfo,\r\n                  setValue: setMelamineInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Laminate Info',\r\n                  value: laminateInfo,\r\n                  setValue: setLaminateInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Bamboo Info',\r\n                  value: bambooInfo,\r\n                  setValue: setBambooInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n              ].map(({ label, value, setValue, type, width }, index) => (\r\n                <TextField\r\n                  key={index}\r\n                  label={label}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  value={value}\r\n                  type={type}\r\n                  onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                  }}\r\n                />\r\n              ))}\r\n              <Autocomplete\r\n                disablePortal\r\n                freeSolo\r\n                value={deskRemark}\r\n                onChange={(event, newValue) => {\r\n                  event.preventDefault();\r\n                  setDeskRemark(newValue);\r\n                }}\r\n                options={deskRemarks}\r\n                fullWidth\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Desk Remark\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setDeskRemark(event.target.value);\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Paper>\r\n            <TextField\r\n              label=\"QTY\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={QTY}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setQTY(e.target.value);\r\n              }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setEditOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={createOpen}\r\n      >\r\n        <DialogTitle>Edit DeskStock</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Desk Features\r\n              </Typography>\r\n              {[\r\n                {\r\n                  value: model,\r\n                  values: models,\r\n                  setValue: setModel,\r\n                  label: 'DeskModel',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: color,\r\n                  values: colors,\r\n                  setValue: setColor,\r\n                  label: 'DeskColor',\r\n                  width: '48%',\r\n                },\r\n              ].map(({ value, values, setValue, label, width }, index) => (\r\n                <Autocomplete\r\n                  key={index}\r\n                  disablePortal\r\n                  value={value ? value : null}\r\n                  onChange={(event, newValue) => {\r\n                    event.preventDefault();\r\n                    setValue(newValue);\r\n                  }}\r\n                  options={values}\r\n                  getOptionLabel={(option) => option.name}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label={label}\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              ))}\r\n              {[\r\n                {\r\n                  label: 'Arm Size',\r\n                  value: armSize,\r\n                  setValue: setArmSize,\r\n                  type: 'number',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Feet Size',\r\n                  value: feetSize,\r\n                  setValue: setFeetSize,\r\n                  type: 'number',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Beam',\r\n                  value: beam,\r\n                  setValue: setBeam,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'AK Info',\r\n                  value: akInfo,\r\n                  setValue: setAkInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Wood Info 1',\r\n                  value: woodInfo_1,\r\n                  setValue: setWoodInfo_1,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Wood Info 2',\r\n                  value: woodInfo_2,\r\n                  setValue: setWoodInfo_2,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Melamine Info',\r\n                  value: melamineInfo,\r\n                  setValue: setMelamineInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Laminate Info',\r\n                  value: laminateInfo,\r\n                  setValue: setLaminateInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Bamboo Info',\r\n                  value: bambooInfo,\r\n                  setValue: setBambooInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n              ].map(({ label, value, setValue, type, width }, index) => (\r\n                <TextField\r\n                  key={index}\r\n                  label={label}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  value={value}\r\n                  type={type}\r\n                  onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                  }}\r\n                />\r\n              ))}\r\n              <Autocomplete\r\n                disablePortal\r\n                freeSolo\r\n                value={deskRemark}\r\n                onChange={(event, newValue) => {\r\n                  event.preventDefault();\r\n                  setDeskRemark(newValue);\r\n                }}\r\n                options={deskRemarks}\r\n                fullWidth\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Desk Remark\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setDeskRemark(event.target.value);\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Paper>\r\n            <TextField\r\n              label=\"QTY\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={QTY}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setQTY(e.target.value);\r\n              }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setCreateOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCreate}>Create</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Stock;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { Add as AddIcon } from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport DataGrid from 'components/Common/DataGrid';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Name',\r\n  },\r\n];\r\n\r\nfunction mapStateToProps(state) {\r\n  const { auth } = state;\r\n  return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)((props) => {\r\n  const [colors, setColors] = useState([]);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [createOpen, setCreateOpen] = useState(false);\r\n  const [id, setID] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const handleEditClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < colors.length && index >= 0) {\r\n      setID(colors[index].id);\r\n      setName(colors[index].name);\r\n    }\r\n    setEditOpen(true);\r\n  };\r\n\r\n  const handleRemoveClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < colors.length && index >= 0) {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: 'This action will remove current ChairColor permanently.',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, Remove!',\r\n        cancelButtonText: 'No, Keep It.',\r\n        allowOutsideClick: false,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          axios\r\n            .delete(`/productColor/${colors[index].id}`)\r\n            .then((response) => {\r\n              // handle success\r\n              getColors();\r\n            })\r\n            .catch(function (error) {\r\n              // handle error\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error.response.data.message,\r\n                allowOutsideClick: false,\r\n              });\r\n              console.log(error);\r\n            })\r\n            .then(function () {\r\n              // always executed\r\n            });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkRemoveClick = (selected) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'This action will remove selected ChairColors permanently.',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Remove!',\r\n      cancelButtonText: 'No, Keep Them.',\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete('/productColor', { data: { ids: selected } })\r\n          .then((response) => {\r\n            // handle success\r\n            getColors();\r\n          })\r\n          .catch(function (error) {\r\n            // handle error\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: error.response.data.message,\r\n              allowOutsideClick: false,\r\n            });\r\n            console.log(error);\r\n          })\r\n          .then(function () {\r\n            // always executed\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSave = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .put(`/productColor/${id}`, { name })\r\n      .then((response) => {\r\n        // handle success\r\n        setEditOpen(false);\r\n        getColors();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setEditOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setEditOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleCreate = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(`/productColor/create`, { name })\r\n      .then((response) => {\r\n        // handle success\r\n        setCreateOpen(false);\r\n        getColors();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setCreateOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setCreateOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getColors = (cancelToken) => {\r\n    axios\r\n      .get('/productColor', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setColors(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    getColors(source.token);\r\n    return () => source.cancel('Color Component got unmounted');\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        onClick={() => {\r\n          setName('');\r\n          setCreateOpen(true);\r\n        }}\r\n      >\r\n        Add New Color\r\n      </Button>\r\n      <DataGrid\r\n        title=\"Colors\"\r\n        rows={colors.map(({ id, ...restProps }, index) => ({\r\n          id: index,\r\n          ...restProps,\r\n        }))}\r\n        columns={columns}\r\n        onEditClick={handleEditClick}\r\n        onRemoveClick={handleRemoveClick}\r\n        onBulkRemoveClick={handleBulkRemoveClick}\r\n      ></DataGrid>\r\n      <Dialog open={editOpen}>\r\n        <DialogTitle>Edit ChairColor</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Edit the ChairColor and Click Save button.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Name\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setEditOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog open={createOpen}>\r\n        <DialogTitle>Edit ChairColor</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Input ChairColor Name and Click Save button.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Name\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setCreateOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCreate}>Create</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Box, Toolbar } from '@mui/material';\r\nimport {\r\n  BookOnline as BookOnlineIcon,\r\n  BlurOn as BlurOnIcon,\r\n  ColorLens as ColorLensIcon,\r\n  Storefront as StorefrontIcon,\r\n} from '@mui/icons-material';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport AppHeader from 'components/Common/AppHeader';\r\nimport { CollapsedSidebar, FixedSidebar } from 'components/Common/Sidebar';\r\nimport { logout } from 'services/auth.service';\r\nimport Users from './Users';\r\nimport { ChairBrand, ChairModel, ChairOrder, ChairStock } from './Chair';\r\nimport { DeskModel, DeskOrder, DeskStock } from './Desk';\r\nimport Color from './Color';\r\n\r\nfunction mapStateToProps(state) {\r\n  const { auth } = state;\r\n  return { auth };\r\n}\r\n\r\nconst drawerWidth = 240;\r\nconst drawerHeight = 50;\r\n\r\nconst menuLists = [\r\n  {\r\n    category: 'Chair',\r\n    content: [\r\n      {\r\n        icon: <BlurOnIcon />,\r\n        label: 'Basic',\r\n        children: [\r\n          { path: '/admin/chair/brand', label: 'Brand' },\r\n          { path: '/admin/chair/model', label: 'Model' },\r\n        ],\r\n      },\r\n      { path: '/admin/chair/stock', icon: <StorefrontIcon />, label: 'Stock' },\r\n      { path: '/admin/chair/order', icon: <BookOnlineIcon />, label: 'Order' },\r\n    ],\r\n  },\r\n  {\r\n    category: 'Desk',\r\n    content: [\r\n      {\r\n        icon: <BlurOnIcon />,\r\n        label: 'Basic',\r\n        children: [{ path: '/admin/desk/model', label: 'Model' }],\r\n      },\r\n      { path: '/admin/desk/stock', icon: <StorefrontIcon />, label: 'Stock' },\r\n      { path: '/admin/desk/order', icon: <BookOnlineIcon />, label: 'Order' },\r\n    ],\r\n  },\r\n  {\r\n    category: 'Common',\r\n    content: [\r\n      { path: '/admin/color', icon: <ColorLensIcon />, label: 'Color' },\r\n    ],\r\n  },\r\n];\r\n\r\nconst Admin = (props) => {\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const { path } = useRouteMatch();\r\n\r\n  const handleDrawerOpen = (e) => {\r\n    e.preventDefault();\r\n    setMobileOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = (e) => {\r\n    e.preventDefault();\r\n    setMobileOpen(false);\r\n  };\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'Log out will remove your session information permanently.',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Logout!',\r\n      cancelButtonText: 'No, Keep Login',\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        props.logout();\r\n      }\r\n    });\r\n    // props.logout();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppHeader\r\n        drawerHeight={drawerHeight}\r\n        handleDrawerToggle={handleDrawerOpen}\r\n        title=\"Administrator\"\r\n      />\r\n      <Box\r\n        flexBasis={`calc(100% - ${drawerHeight}px)`}\r\n        maxHeight={`calc(100% - ${drawerHeight}px)`}\r\n        position=\"relative\"\r\n        display=\"flex\"\r\n        backgroundColor=\"#f4f5f7\"\r\n      >\r\n        <CollapsedSidebar\r\n          mobileOpen={mobileOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          drawerWidth={drawerWidth}\r\n          handleLogout={handleLogout}\r\n          lists={menuLists}\r\n        />\r\n        <FixedSidebar\r\n          drawerWidth={drawerWidth}\r\n          handleLogout={handleLogout}\r\n          lists={menuLists}\r\n        />\r\n        <Box\r\n          component=\"main\"\r\n          sx={{\r\n            flexGrow: 1,\r\n            p: 3,\r\n            width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n            maxWidth: '100%',\r\n          }}\r\n        >\r\n          <Switch>\r\n            <Route path={`${path}/user`} component={Users} />\r\n            <Route path={`${path}/chair/brand`} exact component={ChairBrand} />\r\n            <Route path={`${path}/chair/model`} exact component={ChairModel} />\r\n            <Route path={`${path}/chair/order`} exact component={ChairOrder} />\r\n            <Route path={`${path}/chair/stock`} exact component={ChairStock} />\r\n\r\n            <Route path={`${path}/desk/model`} exact component={DeskModel} />\r\n            <Route path={`${path}/desk/order`} exact component={DeskOrder} />\r\n            <Route path={`${path}/desk/stock`} exact component={DeskStock} />\r\n            <Route path={`${path}/color`} exact component={Color} />\r\n          </Switch>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, { logout })(Admin);\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Autocomplete,\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Fade,\r\n  FormControlLabel,\r\n  IconButton,\r\n  Paper,\r\n  Popper,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Email as EmailIcon,\r\n  PictureAsPdf as PictureAsPdfIcon,\r\n  WhatsApp as WhatsAppIcon,\r\n} from '@mui/icons-material';\r\nimport MuiPhoneNumber from 'material-ui-phone-number';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport QRCode from 'react-qr-code';\r\n\r\nimport DataGrid from 'components/Common/DataGrid';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'invoiceNum',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Invoice',\r\n  },\r\n  {\r\n    id: 'clientName',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: ' Name',\r\n  },\r\n  {\r\n    id: 'clientAddress',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: ' Address',\r\n  },\r\n  {\r\n    id: 'salesmanName',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Salesman Name',\r\n  },\r\n  {\r\n    id: 'orderDate',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Order Date',\r\n  },\r\n  {\r\n    id: 'QTY',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'QTY',\r\n  },\r\n];\r\n\r\nfunction mapStateToProps(state) {\r\n  const { auth } = state;\r\n  return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)((props) => {\r\n  const theme = useTheme();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [createOpen, setCreateOpen] = useState(false);\r\n  const [whatsAppOpen, setWhatsAppOpen] = useState(false);\r\n  const [emailOpen, setEmailOpen] = useState(false);\r\n  const whatsAppMessage = useRef(null);\r\n  const emailContent = useRef(null);\r\n  const [filterAnchor, setFilterAnchor] = useState(null);\r\n\r\n  const [id, setID] = useState('');\r\n  const [brands, setBrands] = useState([]);\r\n  const [models, setModels] = useState([]);\r\n  const [colors, setColors] = useState([]);\r\n  const [chairRemarks, setChairRemarks] = useState(['av', 'avas']);\r\n\r\n  const [filterBrand, setFilterBrand] = useState('');\r\n  const [filterModel, setFilterModel] = useState('');\r\n  const [filterFrameColor, setFilterFrameColor] = useState('');\r\n  const [filterSeatColor, setFilterSeatColor] = useState('');\r\n  const [filterBackColor, setFilterBackColor] = useState('');\r\n\r\n  const [clientName, setClientName] = useState('');\r\n  const [clientEmail, setClientEmail] = useState('');\r\n  const [clientPhone, setClientPhone] = useState('');\r\n  const [clientDistrict, setClientDistrict] = useState('');\r\n  const [clientStreet, setClientStreet] = useState('');\r\n  const [clientBlock, setClientBlock] = useState('');\r\n  const [clientFloor, setClientFloor] = useState('');\r\n  const [clientUnit, setClientUnit] = useState('');\r\n  const [deliveryDate, setDeliveryDate] = useState(new Date());\r\n  const [remark, setRemark] = useState('');\r\n\r\n  const [brand, setBrand] = useState();\r\n  const [model, setModel] = useState();\r\n  const [frameColor, setFrameColor] = useState();\r\n  const [backColor, setBackColor] = useState();\r\n  const [seatColor, setSeatColor] = useState();\r\n  const [withHeadrest, setWithHeadrest] = useState(true);\r\n  const [withAdArmrest, setWithAdArmrest] = useState(true);\r\n  const [chairRemark, setChairRemark] = useState('');\r\n  const [QTY, setQTY] = useState(1);\r\n\r\n  const handleFilterClick = (e) => {\r\n    e.preventDefault();\r\n    if (filterAnchor === null) setFilterAnchor(e.currentTarget);\r\n    else setFilterAnchor(null);\r\n  };\r\n\r\n  const extraLinks = [\r\n    (id) => {\r\n      return (\r\n        <IconButton\r\n          component={Link}\r\n          to={`/chairinvoice/${orders[id].id}`}\r\n          target=\"_blank\"\r\n        >\r\n          <PictureAsPdfIcon />\r\n        </IconButton>\r\n      );\r\n    },\r\n    (id) => {\r\n      return (\r\n        <IconButton\r\n          onClick={() => {\r\n            setClientEmail(orders[id].clientEmail);\r\n            setEmailOpen(true);\r\n          }}\r\n        >\r\n          <EmailIcon />\r\n        </IconButton>\r\n      );\r\n    },\r\n    (id) => {\r\n      return (\r\n        <IconButton\r\n          onClick={() => {\r\n            axios\r\n              .get('whatsapp/checkauth')\r\n              .then(() => {\r\n                setClientPhone(orders[id].clientPhone);\r\n                setWhatsAppOpen(true);\r\n              })\r\n              .catch(function (error) {\r\n                // handle error\r\n                axios\r\n                  .get('whatsapp/getqr')\r\n                  .then((response) => {\r\n                    Swal.fire({\r\n                      icon: 'info',\r\n                      title:\r\n                        'Please signin with this QRCode and Click the button again.',\r\n                      html: ReactDOMServer.renderToStaticMarkup(\r\n                        <QRCode\r\n                          value={`${response.data.qrcode}`}\r\n                          level=\"H\"\r\n                        ></QRCode>\r\n                      ),\r\n                      allowOutsideClick: false,\r\n                    });\r\n                  })\r\n                  .catch(function (qrerror) {\r\n                    // handle error\r\n                    Swal.fire({\r\n                      icon: 'error',\r\n                      title: 'Error',\r\n                      text: 'Unable to use WhatsApp Messaging.',\r\n                      allowOutsideClick: false,\r\n                    });\r\n                  })\r\n                  .then(function () {\r\n                    // always executed\r\n                  });\r\n              })\r\n              .then(function () {\r\n                // always executed\r\n              });\r\n          }}\r\n        >\r\n          <WhatsAppIcon />\r\n        </IconButton>\r\n      );\r\n    },\r\n  ];\r\n\r\n  const handleWhatsAppSend = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post('whatsapp/send', {\r\n        phone: clientPhone,\r\n        message: whatsAppMessage.current.value,\r\n      })\r\n      .then(() => {\r\n        setWhatsAppOpen(false);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setWhatsAppOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setWhatsAppOpen(true);\r\n        });\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleEmailSend = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post('email/send', {\r\n        email: clientEmail,\r\n        message: emailContent.current.value,\r\n      })\r\n      .then(() => {\r\n        setEmailOpen(false);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setEmailOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setEmailOpen(true);\r\n        });\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleEditClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < orders.length && index >= 0) {\r\n      getBrands();\r\n      getModels();\r\n      getColors();\r\n      getChairRemarks();\r\n      setID(orders[index].id);\r\n      setBrand(orders[index].stock.chairBrand);\r\n      setModel(orders[index].stock.chairModel);\r\n      setFrameColor(orders[index].stock.frameColor);\r\n      setBackColor(orders[index].stock.backColor);\r\n      setSeatColor(orders[index].stock.seatColor);\r\n      setWithHeadrest(orders[index].stock.withHeadrest);\r\n      setWithAdArmrest(orders[index].stock.withAdArmrest);\r\n      setChairRemark(orders[index].stock.chairRemark);\r\n      setClientName(orders[index].clientName);\r\n      setClientEmail(orders[index].clientEmail);\r\n      setClientPhone(orders[index].clientPhone);\r\n      setClientDistrict(orders[index].clientDistrict);\r\n      setClientStreet(orders[index].clientStreet);\r\n      setClientBlock(orders[index].clientBlock);\r\n      setClientFloor(orders[index].clientFloor);\r\n      setClientUnit(orders[index].clientUnit);\r\n      setRemark(orders[index].clientRemark);\r\n      const deliveryDate = new Date(orders[index].deliveryDate);\r\n      deliveryDate.setMinutes(\r\n        deliveryDate.getMinutes() - deliveryDate.getTimezoneOffset()\r\n      );\r\n      setDeliveryDate(deliveryDate.toISOString().split('T')[0]);\r\n      setQTY(orders[index].QTY);\r\n      setEditOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleRemoveClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < orders.length && index >= 0) {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: 'This action will remove current ChairOrder permanently.',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, Remove!',\r\n        cancelButtonText: 'No, Keep It.',\r\n        allowOutsideClick: false,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          axios\r\n            .delete(`/chairOrder/${brands[index].id}`)\r\n            .then((response) => {\r\n              // handle success\r\n              getOrders();\r\n            })\r\n            .catch(function (error) {\r\n              // handle error\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error.response.data.message,\r\n                allowOutsideClick: false,\r\n              });\r\n              console.log(error);\r\n            })\r\n            .then(function () {\r\n              // always executed\r\n            });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkRemoveClick = (selected) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'This action will remove selected Brands permanently.',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Remove!',\r\n      cancelButtonText: 'No, Keep Them.',\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete('/chairOrder', { data: { ids: selected } })\r\n          .then((response) => {\r\n            // handle success\r\n            getOrders();\r\n          })\r\n          .catch(function (error) {\r\n            // handle error\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: error.response.data.message,\r\n              allowOutsideClick: false,\r\n            });\r\n            console.log(error);\r\n          })\r\n          .then(function () {\r\n            // always executed\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSave = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .put(`/chairOrder/${id}`, {\r\n        chairBrandId: brand ? brand.id : null,\r\n        chairModelId: model ? model.id : null,\r\n        frameColorId: frameColor ? frameColor.id : null,\r\n        backColorId: backColor ? backColor.id : null,\r\n        seatColorId: seatColor ? seatColor.id : null,\r\n        withHeadrest,\r\n        withAdArmrest,\r\n        chairRemark,\r\n        clientName,\r\n        clientPhone,\r\n        clientEmail,\r\n        clientDistrict,\r\n        clientStreet,\r\n        clientBlock,\r\n        clientFloor,\r\n        clientUnit,\r\n        deliveryDate,\r\n        remark,\r\n        QTY,\r\n      })\r\n      .then((response) => {\r\n        // handle success\r\n        setEditOpen(false);\r\n        getOrders();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setEditOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setEditOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleCreate = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(`/chairOrder/create`, {\r\n        chairBrandId: brand ? brand.id : null,\r\n        chairModelId: model ? model.id : null,\r\n        frameColorId: frameColor ? frameColor.id : null,\r\n        backColorId: backColor ? backColor.id : null,\r\n        seatColorId: seatColor ? seatColor.id : null,\r\n        withHeadrest,\r\n        withAdArmrest,\r\n        chairRemark,\r\n        clientName,\r\n        clientPhone,\r\n        clientEmail,\r\n        clientDistrict,\r\n        clientStreet,\r\n        clientBlock,\r\n        clientFloor,\r\n        clientUnit,\r\n        deliveryDate,\r\n        remark,\r\n        QTY,\r\n      })\r\n      .then((response) => {\r\n        // handle success\r\n        setCreateOpen(false);\r\n        getOrders();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setCreateOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setCreateOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getBrands = (cancelToken) => {\r\n    axios\r\n      .get('/chairBrand', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setBrands(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getModels = (cancelToken) => {\r\n    axios\r\n      .get('/chairModel', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setModels(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getOrders = (cancelToken) => {\r\n    axios\r\n      .get('/chairOrder/current', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setOrders(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getColors = (cancelToken) => {\r\n    axios\r\n      .get('/productColor', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setColors(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getChairRemarks = (cancelToken) => {\r\n    // axios\r\n    //   .get('/chairremark', { cancelToken })\r\n    //   .then((response) => {\r\n    //     // handle success\r\n    //     setChairRemarks(response.data.map((item) => item.detail));\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     // handle error\r\n    //     console.log(error);\r\n    //   })\r\n    //   .then(function () {\r\n    //     // always executed\r\n    //   });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    getOrders(source.token);\r\n    return () => source.cancel('Brand Component got unmounted');\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        onClick={() => {\r\n          getBrands();\r\n          getModels();\r\n          getColors();\r\n          getChairRemarks();\r\n          setBrand(null);\r\n          setModel(null);\r\n          setFrameColor(null);\r\n          setBackColor(null);\r\n          setSeatColor(null);\r\n          setWithHeadrest(false);\r\n          setWithAdArmrest(false);\r\n          setChairRemark('');\r\n          setClientName('');\r\n          setClientEmail('');\r\n          setClientPhone('');\r\n          setClientDistrict('');\r\n          setClientStreet('');\r\n          setClientBlock('');\r\n          setClientFloor('');\r\n          setClientUnit('');\r\n          const now = new Date();\r\n          now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\r\n          setDeliveryDate(now.toISOString().split('T')[0]);\r\n          setRemark('');\r\n          setQTY(1);\r\n          setCreateOpen(true);\r\n        }}\r\n      >\r\n        Add New Order\r\n      </Button>\r\n      <DataGrid\r\n        title=\"Chair Orders\"\r\n        rows={orders\r\n          .map(\r\n            (\r\n              {\r\n                id,\r\n                clientDistrict,\r\n                clientStreet,\r\n                clientBlock,\r\n                clientFloor,\r\n                clientUnit,\r\n                salesman,\r\n                createdAt,\r\n                ...restProps\r\n              },\r\n              index\r\n            ) => ({\r\n              id: index,\r\n              salesmanName: (salesman.firstName || '').concat(\r\n                ' ',\r\n                salesman.lastName || ''\r\n              ),\r\n              orderDate: (() => {\r\n                const createdTime = new Date(createdAt);\r\n                createdTime.setMinutes(\r\n                  createdTime.getMinutes() - createdTime.getTimezoneOffset()\r\n                );\r\n                return createdTime.toISOString().split('T')[0];\r\n              })(),\r\n              clientAddress: [\r\n                clientDistrict,\r\n                clientStreet,\r\n                clientBlock,\r\n                clientFloor,\r\n                clientUnit,\r\n              ].join(', '),\r\n              ...restProps,\r\n            })\r\n          )\r\n          .filter(\r\n            (item, key) =>\r\n              (item.stock.chairBrand.name || '')\r\n                .toLowerCase()\r\n                .includes(filterBrand.toLowerCase()) &&\r\n              (item.stock.chairModel.name || '')\r\n                .toLowerCase()\r\n                .includes(filterModel.toLowerCase()) &&\r\n              (item.stock.frameColor.name || '')\r\n                .toLowerCase()\r\n                .includes(filterFrameColor.toLowerCase()) &&\r\n              (item.stock.backColor.name || '')\r\n                .toLowerCase()\r\n                .includes(filterBackColor.toLowerCase()) &&\r\n              (item.stock.seatColor.name || '')\r\n                .toLowerCase()\r\n                .includes(filterSeatColor.toLowerCase())\r\n          )}\r\n        columns={columns}\r\n        extraLinks={extraLinks}\r\n        onEditClick={handleEditClick}\r\n        onRemoveClick={handleRemoveClick}\r\n        onBulkRemoveClick={handleBulkRemoveClick}\r\n        onFilterClick={handleFilterClick}\r\n      />\r\n      <Popper\r\n        anchorEl={filterAnchor}\r\n        open={Boolean(filterAnchor)}\r\n        placement={'bottom-end'}\r\n        disablePortal={false}\r\n        transition\r\n        onClose={() => {\r\n          setFilterAnchor(null);\r\n        }}\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                maxWidth: 400,\r\n                // maxWidth: '100%',\r\n              }}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                flexWrap=\"wrap\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                {[\r\n                  {\r\n                    value: filterBrand,\r\n                    values: brands,\r\n                    setValue: setFilterBrand,\r\n                    label: 'Brand',\r\n                    width: '48%',\r\n                  },\r\n                  {\r\n                    value: filterModel,\r\n                    values: models,\r\n                    setValue: setFilterModel,\r\n                    label: 'Model',\r\n                    width: '48%',\r\n                  },\r\n                  {\r\n                    value: filterFrameColor,\r\n                    values: colors,\r\n                    setValue: setFilterFrameColor,\r\n                    label: 'FrameColor',\r\n                    width: '30%',\r\n                  },\r\n                  {\r\n                    value: filterBackColor,\r\n                    values: colors,\r\n                    setValue: setFilterBackColor,\r\n                    label: 'BackColor',\r\n                    width: '30%',\r\n                  },\r\n                  {\r\n                    value: filterSeatColor,\r\n                    values: colors,\r\n                    setValue: setFilterSeatColor,\r\n                    label: 'SeatColor',\r\n                    width: '30%',\r\n                  },\r\n                ].map(({ value, values, setValue, label, width }, index) => (\r\n                  <TextField\r\n                    key={index}\r\n                    sx={{ flexBasis: width, minWidth: width }}\r\n                    value={value}\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setValue(event.target.value);\r\n                    }}\r\n                    margin=\"dense\"\r\n                    label={label}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                ))}\r\n                <TextField\r\n                  type=\"datetime-local\"\r\n                  margin=\"dense\"\r\n                  label=\"from\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={(e) => {\r\n                    console.log(typeof e.target.value);\r\n                  }}\r\n                ></TextField>\r\n              </Box>\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Button\r\n                  onClick={() => {\r\n                    setFilterBrand('');\r\n                    setFilterModel('');\r\n                    setFilterFrameColor('');\r\n                    setFilterBackColor('');\r\n                    setFilterSeatColor('');\r\n                  }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  Clear\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    setFilterAnchor(null);\r\n                  }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  OK\r\n                </Button>\r\n              </Box>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={editOpen}\r\n      >\r\n        <DialogTitle>Edit ChairOrder</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Chair Features\r\n              </Typography>\r\n              {[\r\n                {\r\n                  value: brand,\r\n                  values: brands,\r\n                  setValue: setBrand,\r\n                  label: 'Brand',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: model,\r\n                  values: models,\r\n                  setValue: setModel,\r\n                  label: 'Model',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: frameColor,\r\n                  values: colors,\r\n                  setValue: setFrameColor,\r\n                  label: 'FrameColor',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  value: backColor,\r\n                  values: colors,\r\n                  setValue: setBackColor,\r\n                  label: 'BackColor',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  value: seatColor,\r\n                  values: colors,\r\n                  setValue: setSeatColor,\r\n                  label: 'SeatColor',\r\n                  width: '30%',\r\n                },\r\n              ].map(({ value, values, setValue, label, width }, index) => (\r\n                <Autocomplete\r\n                  key={index}\r\n                  disablePortal\r\n                  value={value ? value : null}\r\n                  onChange={(event, newValue) => {\r\n                    event.preventDefault();\r\n                    setValue(newValue);\r\n                  }}\r\n                  options={values}\r\n                  getOptionLabel={(option) => option.name}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      {...params}\r\n                      label={label}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              ))}\r\n              <Autocomplete\r\n                disablePortal\r\n                freeSolo\r\n                value={chairRemark}\r\n                onChange={(event, newValue) => {\r\n                  event.preventDefault();\r\n                  setChairRemark(newValue);\r\n                }}\r\n                options={chairRemarks}\r\n                fullWidth\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Chair Remark\"\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setChairRemark(event.target.value);\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n              <FormControlLabel\r\n                sx={{ flexBasis: '45%', minWidth: '45%' }}\r\n                control={\r\n                  <Checkbox\r\n                    checked={withHeadrest}\r\n                    onChange={() => {\r\n                      setWithHeadrest(!withHeadrest);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"With Headrest\"\r\n              />\r\n              <FormControlLabel\r\n                sx={{ flexBasis: '45%', minWidth: '45%' }}\r\n                control={\r\n                  <Checkbox\r\n                    checked={withAdArmrest}\r\n                    onChange={() => {\r\n                      setWithAdArmrest(!withAdArmrest);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"With Adjustable Armrests\"\r\n              />\r\n            </Paper>\r\n            <Paper\r\n              sx={{\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Client Info\r\n              </Typography>\r\n              {[\r\n                {\r\n                  label: 'Name',\r\n                  value: clientName,\r\n                  setValue: setClientName,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n                {\r\n                  label: 'Phone',\r\n                  value: clientPhone,\r\n                  setValue: setClientPhone,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Email',\r\n                  value: clientEmail,\r\n                  setValue: setClientEmail,\r\n                  type: 'email',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'District',\r\n                  value: clientDistrict,\r\n                  setValue: setClientDistrict,\r\n                  type: 'text',\r\n                  width: '55%',\r\n                },\r\n                {\r\n                  label: 'Street',\r\n                  value: clientStreet,\r\n                  setValue: setClientStreet,\r\n                  type: 'text',\r\n                  width: '40%',\r\n                },\r\n                {\r\n                  label: 'Block',\r\n                  value: clientBlock,\r\n                  setValue: setClientBlock,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Floor',\r\n                  value: clientFloor,\r\n                  setValue: setClientFloor,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Unit',\r\n                  value: clientUnit,\r\n                  setValue: setClientUnit,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Delivery Date',\r\n                  value: deliveryDate,\r\n                  setValue: setDeliveryDate,\r\n                  type: 'date',\r\n                  width: '100%',\r\n                  InputLabelProps: { shrink: true },\r\n                },\r\n                {\r\n                  label: 'Remark',\r\n                  value: remark,\r\n                  setValue: setRemark,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n              ].map(({ setValue, width, ...restProps }, index) =>\r\n                restProps.label === 'Phone' ? (\r\n                  <MuiPhoneNumber\r\n                    key={index}\r\n                    defaultCountry={'hk'}\r\n                    onChange={(value) => {\r\n                      setValue(value);\r\n                    }}\r\n                    sx={{ flexBasis: width, minWidth: width }}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                    {...restProps}\r\n                  />\r\n                ) : (\r\n                  <TextField\r\n                    key={index}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(e) => {\r\n                      setValue(e.target.value);\r\n                    }}\r\n                    sx={{ flexBasis: width, minWidth: width }}\r\n                    {...restProps}\r\n                  />\r\n                )\r\n              )}\r\n            </Paper>\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"QTY\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={QTY}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setQTY(e.target.value);\r\n              }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setEditOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={createOpen}\r\n      >\r\n        <DialogTitle>Create ChairOrder</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Chair Features\r\n              </Typography>\r\n              {[\r\n                {\r\n                  value: brand,\r\n                  values: brands,\r\n                  setValue: setBrand,\r\n                  label: 'Brand',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: model,\r\n                  values: models,\r\n                  setValue: setModel,\r\n                  label: 'Model',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: frameColor,\r\n                  values: colors,\r\n                  setValue: setFrameColor,\r\n                  label: 'FrameColor',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  value: backColor,\r\n                  values: colors,\r\n                  setValue: setBackColor,\r\n                  label: 'BackColor',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  value: seatColor,\r\n                  values: colors,\r\n                  setValue: setSeatColor,\r\n                  label: 'SeatColor',\r\n                  width: '30%',\r\n                },\r\n              ].map(({ value, values, setValue, label, width }, index) => (\r\n                <Autocomplete\r\n                  key={index}\r\n                  disablePortal\r\n                  value={value ? value : null}\r\n                  onChange={(event, newValue) => {\r\n                    event.preventDefault();\r\n                    setValue(newValue);\r\n                  }}\r\n                  options={values}\r\n                  getOptionLabel={(option) => option.name}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      {...params}\r\n                      label={label}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              ))}\r\n              <Autocomplete\r\n                disablePortal\r\n                freeSolo\r\n                value={chairRemark}\r\n                onChange={(event, newValue) => {\r\n                  event.preventDefault();\r\n                  setChairRemark(newValue);\r\n                }}\r\n                options={chairRemarks}\r\n                fullWidth\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Chair Remark\"\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setChairRemark(event.target.value);\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n              <FormControlLabel\r\n                sx={{ flexBasis: '45%', minWidth: '45%' }}\r\n                control={\r\n                  <Checkbox\r\n                    checked={withHeadrest}\r\n                    onChange={() => {\r\n                      setWithHeadrest(!withHeadrest);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"With Headrest\"\r\n              />\r\n              <FormControlLabel\r\n                sx={{ flexBasis: '45%', minWidth: '45%' }}\r\n                control={\r\n                  <Checkbox\r\n                    checked={withAdArmrest}\r\n                    onChange={() => {\r\n                      setWithAdArmrest(!withAdArmrest);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"With Adjustable Armrests\"\r\n              />\r\n            </Paper>\r\n            <Paper\r\n              sx={{\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Client Info\r\n              </Typography>\r\n              {[\r\n                {\r\n                  label: 'Name',\r\n                  value: clientName,\r\n                  setValue: setClientName,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n                {\r\n                  label: 'Phone',\r\n                  value: clientPhone,\r\n                  setValue: setClientPhone,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Email',\r\n                  value: clientEmail,\r\n                  setValue: setClientEmail,\r\n                  type: 'email',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'District',\r\n                  value: clientDistrict,\r\n                  setValue: setClientDistrict,\r\n                  type: 'text',\r\n                  width: '55%',\r\n                },\r\n                {\r\n                  label: 'Street',\r\n                  value: clientStreet,\r\n                  setValue: setClientStreet,\r\n                  type: 'text',\r\n                  width: '40%',\r\n                },\r\n                {\r\n                  label: 'Block',\r\n                  value: clientBlock,\r\n                  setValue: setClientBlock,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Floor',\r\n                  value: clientFloor,\r\n                  setValue: setClientFloor,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Unit',\r\n                  value: clientUnit,\r\n                  setValue: setClientUnit,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Delivery Date',\r\n                  value: deliveryDate,\r\n                  setValue: setDeliveryDate,\r\n                  type: 'date',\r\n                  width: '100%',\r\n                  InputLabelProps: { shrink: true },\r\n                },\r\n                {\r\n                  label: 'Remark',\r\n                  value: remark,\r\n                  setValue: setRemark,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n              ].map(({ setValue, width, ...restProps }, index) =>\r\n                restProps.label === 'Phone' ? (\r\n                  <MuiPhoneNumber\r\n                    key={index}\r\n                    defaultCountry={'hk'}\r\n                    onChange={(value) => {\r\n                      setValue(value);\r\n                    }}\r\n                    sx={{ flexBasis: width, minWidth: width }}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                    {...restProps}\r\n                  />\r\n                ) : (\r\n                  <TextField\r\n                    key={index}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(e) => {\r\n                      setValue(e.target.value);\r\n                    }}\r\n                    sx={{ flexBasis: width, minWidth: width }}\r\n                    {...restProps}\r\n                  />\r\n                )\r\n              )}\r\n            </Paper>\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"QTY\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={QTY}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setQTY(e.target.value);\r\n              }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              setCreateOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCreate}>Create</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={whatsAppOpen}\r\n      >\r\n        <DialogTitle>Send WhatsApp Message to the Client</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <MuiPhoneNumber\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Phone Number\"\r\n              defaultCountry={'hk'}\r\n              value={clientPhone}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              inputRef={whatsAppMessage}\r\n              label=\"Message\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              defaultValue={`Hello ${clientName},\\nThank you for your order! Please find here (payment link URL) for your payment. Once finished, your order will be processed.\\nOnce finished, your order will be processed accordingly.`}\r\n              multiline\r\n              minRows={4}\r\n              maxRows={10}\r\n              // onChange={(e) => {\r\n              //   setWhatsAppMessage(e.target.value);\r\n              // }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              setWhatsAppOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleWhatsAppSend}>Send</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={emailOpen}\r\n      >\r\n        <DialogTitle>Send Email to the Client</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <TextField\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={clientEmail}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              inputRef={emailContent}\r\n              label=\"Message\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              defaultValue={`Hello ${clientName},\\nThank you for your order! Please find here (payment link URL) for your payment. Once finished, your order will be processed.\\nOnce finished, your order will be processed accordingly.`}\r\n              multiline\r\n              minRows={4}\r\n              maxRows={10}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              setEmailOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleEmailSend}>Send</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n});\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Autocomplete,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Paper,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Email as EmailIcon,\r\n  PictureAsPdf as PictureAsPdfIcon,\r\n  WhatsApp as WhatsAppIcon,\r\n} from '@mui/icons-material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiPhoneNumber from 'material-ui-phone-number';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport QRCode from 'react-qr-code';\r\n\r\nimport DataGrid from 'components/Common/DataGrid';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'invoiceNum',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Invoice',\r\n  },\r\n  {\r\n    id: 'clientName',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Client Name',\r\n  },\r\n  {\r\n    id: 'clientAddress',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Client Address',\r\n  },\r\n  {\r\n    id: 'salesmanName',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Salesman Name',\r\n  },\r\n  {\r\n    id: 'orderDate',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Order Date',\r\n  },\r\n  {\r\n    id: 'QTY',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'QTY',\r\n  },\r\n];\r\n\r\nfunction mapStateToProps(state) {\r\n  const { auth } = state;\r\n  return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)((props) => {\r\n  const theme = useTheme();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [createOpen, setCreateOpen] = useState(false);\r\n  const [whatsAppOpen, setWhatsAppOpen] = useState(false);\r\n  const [emailOpen, setEmailOpen] = useState(false);\r\n  const whatsAppMessage = useRef(null);\r\n  const emailContent = useRef(null);\r\n  const [id, setID] = useState('');\r\n  const [models, setModels] = useState([]);\r\n  const [colors, setColors] = useState([]);\r\n  const [deskRemarks, setDeskRemarks] = useState(['av', 'avas']);\r\n\r\n  const [clientName, setClientName] = useState('');\r\n  const [clientEmail, setClientEmail] = useState('');\r\n  const [clientPhone, setClientPhone] = useState('');\r\n  const [clientDistrict, setClientDistrict] = useState('');\r\n  const [clientStreet, setClientStreet] = useState('');\r\n  const [clientBlock, setClientBlock] = useState('');\r\n  const [clientFloor, setClientFloor] = useState('');\r\n  const [clientUnit, setClientUnit] = useState('');\r\n  const [deliveryDate, setDeliveryDate] = useState(new Date());\r\n  const [remark, setRemark] = useState('');\r\n\r\n  const [model, setModel] = useState(null);\r\n  const [color, setColor] = useState(null);\r\n  const [armSize, setArmSize] = useState('');\r\n  const [feetSize, setFeetSize] = useState('');\r\n  const [beam, setBeam] = useState('');\r\n  const [akInfo, setAkInfo] = useState('');\r\n  const [woodInfo_1, setWoodInfo_1] = useState('');\r\n  const [woodInfo_2, setWoodInfo_2] = useState('');\r\n  const [melamineInfo, setMelamineInfo] = useState('');\r\n  const [laminateInfo, setLaminateInfo] = useState('');\r\n  const [bambooInfo, setBambooInfo] = useState('');\r\n  const [deskRemark, setDeskRemark] = useState('');\r\n  const [QTY, setQTY] = useState(1);\r\n\r\n  const extraLinks = [\r\n    (id) => {\r\n      return (\r\n        <IconButton\r\n          component={Link}\r\n          to={`/chairinvoice/${orders[id].id}`}\r\n          target=\"_blank\"\r\n        >\r\n          <PictureAsPdfIcon />\r\n        </IconButton>\r\n      );\r\n    },\r\n    (id) => {\r\n      return (\r\n        <IconButton\r\n          onClick={() => {\r\n            setClientEmail(orders[id].clientEmail);\r\n            setEmailOpen(true);\r\n          }}\r\n        >\r\n          <EmailIcon />\r\n        </IconButton>\r\n      );\r\n    },\r\n    (id) => {\r\n      return (\r\n        <IconButton\r\n          onClick={() => {\r\n            axios\r\n              .get('whatsapp/checkauth')\r\n              .then(() => {\r\n                setClientPhone(orders[id].clientPhone);\r\n                setWhatsAppOpen(true);\r\n              })\r\n              .catch(function (error) {\r\n                // handle error\r\n                axios\r\n                  .get('whatsapp/getqr')\r\n                  .then((response) => {\r\n                    Swal.fire({\r\n                      icon: 'info',\r\n                      title:\r\n                        'Please signin with this QRCode and Click the button again.',\r\n                      html: ReactDOMServer.renderToStaticMarkup(\r\n                        <QRCode\r\n                          value={`${response.data.qrcode}`}\r\n                          level=\"H\"\r\n                        ></QRCode>\r\n                      ),\r\n                      allowOutsideClick: false,\r\n                    });\r\n                  })\r\n                  .catch(function (qrerror) {\r\n                    // handle error\r\n                    Swal.fire({\r\n                      icon: 'error',\r\n                      title: 'Error',\r\n                      text: 'Unable to use WhatsApp Messaging.',\r\n                      allowOutsideClick: false,\r\n                    });\r\n                  })\r\n                  .then(function () {\r\n                    // always executed\r\n                  });\r\n              })\r\n              .then(function () {\r\n                // always executed\r\n              });\r\n          }}\r\n        >\r\n          <WhatsAppIcon />\r\n        </IconButton>\r\n      );\r\n    },\r\n  ];\r\n\r\n  const handleWhatsAppSend = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post('whatsapp/send', {\r\n        phone: clientPhone,\r\n        message: whatsAppMessage.current.value,\r\n      })\r\n      .then(() => {\r\n        setWhatsAppOpen(false);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setWhatsAppOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setWhatsAppOpen(true);\r\n        });\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleEmailSend = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post('email/send', {\r\n        email: clientEmail,\r\n        message: emailContent.current.value,\r\n      })\r\n      .then(() => {\r\n        setEmailOpen(false);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setEmailOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setEmailOpen(true);\r\n        });\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleEditClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < orders.length && index >= 0) {\r\n      getModels();\r\n      getColors();\r\n      getDeskRemarks();\r\n      setID(orders[index].id);\r\n      setModel(orders[index].stock.deskModel);\r\n      setColor(orders[index].stock.color);\r\n      setArmSize(orders[index].stock.armSize);\r\n      setFeetSize(orders[index].stock.feetSize);\r\n      setBeam(orders[index].stock.beam);\r\n      setAkInfo(orders[index].stock.akInfo);\r\n      setWoodInfo_1(orders[index].stock.woodInfo_1);\r\n      setWoodInfo_2(orders[index].stock.woodInfo_2);\r\n      setMelamineInfo(orders[index].stock.melamineInfo);\r\n      setLaminateInfo(orders[index].stock.laminateInfo);\r\n      setBambooInfo(orders[index].stock.bambooInfo);\r\n      setDeskRemark(orders[index].stock.deskRemark);\r\n      setClientName(orders[index].clientName);\r\n      setClientEmail(orders[index].clientEmail);\r\n      setClientPhone(orders[index].clientPhone);\r\n      setClientDistrict(orders[index].clientDistrict);\r\n      setClientStreet(orders[index].clientStreet);\r\n      setClientBlock(orders[index].clientBlock);\r\n      setClientFloor(orders[index].clientFloor);\r\n      setClientUnit(orders[index].clientUnit);\r\n      setRemark(orders[index].clientRemark);\r\n      const deliveryDate = new Date(orders[index].deliveryDate);\r\n      deliveryDate.setMinutes(\r\n        deliveryDate.getMinutes() - deliveryDate.getTimezoneOffset()\r\n      );\r\n      setDeliveryDate(deliveryDate.toISOString().split('T')[0]);\r\n      setQTY(orders[index].QTY);\r\n      setEditOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleRemoveClick = (event, index) => {\r\n    event.preventDefault();\r\n    if (index < orders.length && index >= 0) {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: 'This action will remove current DeskStock permanently.',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, Remove!',\r\n        cancelButtonText: 'No, Keep It.',\r\n        allowOutsideClick: false,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          axios\r\n            .delete(`/deskOrder/${orders[index].id}`)\r\n            .then((response) => {\r\n              // handle success\r\n              getOrders();\r\n            })\r\n            .catch(function (error) {\r\n              // handle error\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: error.response.data.message,\r\n                allowOutsideClick: false,\r\n              });\r\n              console.log(error);\r\n            })\r\n            .then(function () {\r\n              // always executed\r\n            });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkRemoveClick = (selected) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'This action will remove selected Brands permanently.',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Remove!',\r\n      cancelButtonText: 'No, Keep Them.',\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete('/chiarstock', { data: { ids: selected } })\r\n          .then((response) => {\r\n            // handle success\r\n            getOrders();\r\n          })\r\n          .catch(function (error) {\r\n            // handle error\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: error.response.data.message,\r\n              allowOutsideClick: false,\r\n            });\r\n            console.log(error);\r\n          })\r\n          .then(function () {\r\n            // always executed\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSave = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .put(`/deskOrder/${id}`, {\r\n        deskModelId: model ? model.id : null,\r\n        colorId: color ? color.id : null,\r\n        armSize,\r\n        feetSize,\r\n        beam,\r\n        akInfo,\r\n        woodInfo_1,\r\n        woodInfo_2,\r\n        melamineInfo,\r\n        laminateInfo,\r\n        bambooInfo,\r\n        deskRemark,\r\n        clientName,\r\n        clientEmail,\r\n        clientPhone,\r\n        clientDistrict,\r\n        clientStreet,\r\n        clientBlock,\r\n        clientFloor,\r\n        clientUnit,\r\n        deliveryDate,\r\n        remark,\r\n        QTY,\r\n      })\r\n      .then((response) => {\r\n        // handle success\r\n        setEditOpen(false);\r\n        getOrders();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setEditOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setEditOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const handleCreate = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(`/deskOrder/create`, {\r\n        deskModelId: model ? model.id : null,\r\n        colorId: color ? color.id : null,\r\n        armSize,\r\n        feetSize,\r\n        beam,\r\n        akInfo,\r\n        woodInfo_1,\r\n        woodInfo_2,\r\n        melamineInfo,\r\n        laminateInfo,\r\n        bambooInfo,\r\n        deskRemark,\r\n        clientName,\r\n        clientEmail,\r\n        clientPhone,\r\n        clientDistrict,\r\n        clientStreet,\r\n        clientBlock,\r\n        clientFloor,\r\n        clientUnit,\r\n        deliveryDate,\r\n        remark,\r\n        QTY,\r\n      })\r\n      .then((response) => {\r\n        // handle success\r\n        setCreateOpen(false);\r\n        getOrders();\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        setCreateOpen(false);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response.data.message,\r\n          allowOutsideClick: false,\r\n        }).then(() => {\r\n          setCreateOpen(true);\r\n        });\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getModels = (cancelToken) => {\r\n    axios\r\n      .get('/deskModel', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setModels(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getOrders = (cancelToken) => {\r\n    axios\r\n      .get('/deskOrder/current', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setOrders(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getColors = (cancelToken) => {\r\n    axios\r\n      .get('/productColor', { cancelToken })\r\n      .then((response) => {\r\n        // handle success\r\n        setColors(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  const getDeskRemarks = (cancelToken) => {\r\n    // axios\r\n    //   .get('/deskremark', { cancelToken })\r\n    //   .then((response) => {\r\n    //     // handle success\r\n    //     setDeskRemarks(response.data.map((item) => item.detail));\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     // handle error\r\n    //     console.log(error);\r\n    //   })\r\n    //   .then(function () {\r\n    //     // always executed\r\n    //   });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    getOrders(source.token);\r\n    return () => source.cancel('Brand Component got unmounted');\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        onClick={() => {\r\n          getModels();\r\n          getColors();\r\n          getDeskRemarks();\r\n          setModel(null);\r\n          setColor(null);\r\n          setArmSize('');\r\n          setFeetSize('');\r\n          setBeam('');\r\n          setAkInfo('');\r\n          setWoodInfo_1('');\r\n          setWoodInfo_2('');\r\n          setMelamineInfo('');\r\n          setLaminateInfo('');\r\n          setBambooInfo('');\r\n          setDeskRemark('');\r\n          setClientName('');\r\n          setClientEmail('');\r\n          setClientPhone('');\r\n          setClientDistrict('');\r\n          setClientStreet('');\r\n          setClientBlock('');\r\n          setClientFloor('');\r\n          setClientUnit('');\r\n          const now = new Date();\r\n          now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\r\n          setDeliveryDate(now.toISOString().split('T')[0]);\r\n          setRemark('');\r\n          setQTY(1);\r\n          setCreateOpen(true);\r\n        }}\r\n      >\r\n        Add New Order\r\n      </Button>\r\n      <DataGrid\r\n        title=\"Desk Orders\"\r\n        rows={orders.map(\r\n          (\r\n            {\r\n              id,\r\n              clientDistrict,\r\n              clientStreet,\r\n              clientBlock,\r\n              clientFloor,\r\n              clientUnit,\r\n              salesman,\r\n              createdAt,\r\n              ...restProps\r\n            },\r\n            index\r\n          ) => ({\r\n            id: index,\r\n            salesmanName: (salesman.firstName || '').concat(\r\n              ' ',\r\n              salesman.lastName || ''\r\n            ),\r\n            orderDate: (() => {\r\n              const createdTime = new Date(createdAt);\r\n              createdTime.setMinutes(\r\n                createdTime.getMinutes() - createdTime.getTimezoneOffset()\r\n              );\r\n              return createdTime.toISOString().split('T')[0];\r\n            })(),\r\n            clientAddress: [\r\n              clientDistrict,\r\n              clientStreet,\r\n              clientBlock,\r\n              clientFloor,\r\n              clientUnit,\r\n            ].join(', '),\r\n            ...restProps,\r\n          })\r\n        )}\r\n        columns={columns}\r\n        extraLinks={extraLinks}\r\n        onEditClick={handleEditClick}\r\n        onRemoveClick={handleRemoveClick}\r\n        onBulkRemoveClick={handleBulkRemoveClick}\r\n      ></DataGrid>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={editOpen}\r\n      >\r\n        <DialogTitle>Edit DeskOrder</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Desk Features\r\n              </Typography>\r\n              {[\r\n                {\r\n                  value: model,\r\n                  values: models,\r\n                  setValue: setModel,\r\n                  label: 'DeskModel',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: color,\r\n                  values: colors,\r\n                  setValue: setColor,\r\n                  label: 'DeskColor',\r\n                  width: '48%',\r\n                },\r\n              ].map(({ value, values, setValue, label, width }, index) => (\r\n                <Autocomplete\r\n                  key={index}\r\n                  disablePortal\r\n                  value={value ? value : null}\r\n                  onChange={(event, newValue) => {\r\n                    event.preventDefault();\r\n                    setValue(newValue);\r\n                  }}\r\n                  options={values}\r\n                  getOptionLabel={(option) => option.name}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label={label}\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              ))}\r\n              {[\r\n                {\r\n                  label: 'Arm Size',\r\n                  value: armSize,\r\n                  setValue: setArmSize,\r\n                  type: 'number',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Feet Size',\r\n                  value: feetSize,\r\n                  setValue: setFeetSize,\r\n                  type: 'number',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Beam',\r\n                  value: beam,\r\n                  setValue: setBeam,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'AK Info',\r\n                  value: akInfo,\r\n                  setValue: setAkInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Wood Info 1',\r\n                  value: woodInfo_1,\r\n                  setValue: setWoodInfo_1,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Wood Info 2',\r\n                  value: woodInfo_2,\r\n                  setValue: setWoodInfo_2,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Melamine Info',\r\n                  value: melamineInfo,\r\n                  setValue: setMelamineInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Laminate Info',\r\n                  value: laminateInfo,\r\n                  setValue: setLaminateInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Bamboo Info',\r\n                  value: bambooInfo,\r\n                  setValue: setBambooInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n              ].map(({ label, value, setValue, type, width }, index) => (\r\n                <TextField\r\n                  key={index}\r\n                  label={label}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  value={value}\r\n                  type={type}\r\n                  onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                  }}\r\n                />\r\n              ))}\r\n              <Autocomplete\r\n                disablePortal\r\n                freeSolo\r\n                value={deskRemark}\r\n                onChange={(event, newValue) => {\r\n                  event.preventDefault();\r\n                  setDeskRemark(newValue);\r\n                }}\r\n                options={deskRemarks}\r\n                fullWidth\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Desk Remark\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setDeskRemark(event.target.value);\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Paper>\r\n            <Paper\r\n              sx={{\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Client Info\r\n              </Typography>\r\n              {[\r\n                {\r\n                  label: 'Name',\r\n                  value: clientName,\r\n                  setValue: setClientName,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n                {\r\n                  label: 'Email',\r\n                  value: clientEmail,\r\n                  setValue: setClientEmail,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Phone',\r\n                  value: clientPhone,\r\n                  setValue: setClientPhone,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'District',\r\n                  value: clientDistrict,\r\n                  setValue: setClientDistrict,\r\n                  type: 'text',\r\n                  width: '55%',\r\n                },\r\n                {\r\n                  label: 'Street',\r\n                  value: clientStreet,\r\n                  setValue: setClientStreet,\r\n                  type: 'text',\r\n                  width: '40%',\r\n                },\r\n                {\r\n                  label: 'Block',\r\n                  value: clientBlock,\r\n                  setValue: setClientBlock,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Floor',\r\n                  value: clientFloor,\r\n                  setValue: setClientFloor,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Unit',\r\n                  value: clientUnit,\r\n                  setValue: setClientUnit,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Delivery Date',\r\n                  value: deliveryDate,\r\n                  setValue: setDeliveryDate,\r\n                  type: 'date',\r\n                  width: '100%',\r\n                  InputLabelProps: { shrink: true },\r\n                },\r\n                {\r\n                  label: 'Remark',\r\n                  value: remark,\r\n                  setValue: setRemark,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n              ].map((item, index) =>\r\n                item.label === 'Phone' ? (\r\n                  <MuiPhoneNumber\r\n                    key={index}\r\n                    defaultCountry={'hk'}\r\n                    value={item.value}\r\n                    onChange={(value) => {\r\n                      item.setValue(value);\r\n                    }}\r\n                    label={item.label}\r\n                    sx={{ flexBasis: item.width, minWidth: item.width }}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                  />\r\n                ) : (\r\n                  <TextField\r\n                    key={index}\r\n                    margin=\"dense\"\r\n                    label={item.label}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    value={item.value}\r\n                    type={item.type}\r\n                    onChange={(e) => {\r\n                      item.setValue(e.target.value);\r\n                    }}\r\n                    sx={{ flexBasis: item.width, minWidth: item.width }}\r\n                  />\r\n                )\r\n              )}\r\n            </Paper>\r\n            <TextField\r\n              label=\"QTY\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={QTY}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setQTY(e.target.value);\r\n              }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setEditOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={createOpen}\r\n      >\r\n        <DialogTitle>Create DeskOrder</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <Paper\r\n              sx={{\r\n                mt: '5px',\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Desk Features\r\n              </Typography>\r\n              {[\r\n                {\r\n                  value: model,\r\n                  values: models,\r\n                  setValue: setModel,\r\n                  label: 'DeskModel',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  value: color,\r\n                  values: colors,\r\n                  setValue: setColor,\r\n                  label: 'DeskColor',\r\n                  width: '48%',\r\n                },\r\n              ].map(({ value, values, setValue, label, width }, index) => (\r\n                <Autocomplete\r\n                  key={index}\r\n                  disablePortal\r\n                  value={value ? value : null}\r\n                  onChange={(event, newValue) => {\r\n                    event.preventDefault();\r\n                    setValue(newValue);\r\n                  }}\r\n                  options={values}\r\n                  getOptionLabel={(option) => option.name}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label={label}\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  )}\r\n                />\r\n              ))}\r\n              {[\r\n                {\r\n                  label: 'Arm Size',\r\n                  value: armSize,\r\n                  setValue: setArmSize,\r\n                  type: 'number',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Feet Size',\r\n                  value: feetSize,\r\n                  setValue: setFeetSize,\r\n                  type: 'number',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Beam',\r\n                  value: beam,\r\n                  setValue: setBeam,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'AK Info',\r\n                  value: akInfo,\r\n                  setValue: setAkInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Wood Info 1',\r\n                  value: woodInfo_1,\r\n                  setValue: setWoodInfo_1,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Wood Info 2',\r\n                  value: woodInfo_2,\r\n                  setValue: setWoodInfo_2,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Melamine Info',\r\n                  value: melamineInfo,\r\n                  setValue: setMelamineInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Laminate Info',\r\n                  value: laminateInfo,\r\n                  setValue: setLaminateInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Bamboo Info',\r\n                  value: bambooInfo,\r\n                  setValue: setBambooInfo,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n              ].map(({ label, value, setValue, type, width }, index) => (\r\n                <TextField\r\n                  key={index}\r\n                  label={label}\r\n                  sx={{ flexBasis: width, minWidth: width }}\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  value={value}\r\n                  type={type}\r\n                  onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                  }}\r\n                />\r\n              ))}\r\n              <Autocomplete\r\n                disablePortal\r\n                freeSolo\r\n                value={deskRemark}\r\n                onChange={(event, newValue) => {\r\n                  event.preventDefault();\r\n                  setDeskRemark(newValue);\r\n                }}\r\n                options={deskRemarks}\r\n                fullWidth\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Desk Remark\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(event) => {\r\n                      event.preventDefault();\r\n                      setDeskRemark(event.target.value);\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Paper>\r\n            <Paper\r\n              sx={{\r\n                p: '10px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ flexBasis: '100%', minWidth: '100%' }}\r\n              >\r\n                Client Info\r\n              </Typography>\r\n              {[\r\n                {\r\n                  label: 'Name',\r\n                  value: clientName,\r\n                  setValue: setClientName,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n                {\r\n                  label: 'Email',\r\n                  value: clientEmail,\r\n                  setValue: setClientEmail,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'Phone',\r\n                  value: clientPhone,\r\n                  setValue: setClientPhone,\r\n                  type: 'text',\r\n                  width: '48%',\r\n                },\r\n                {\r\n                  label: 'District',\r\n                  value: clientDistrict,\r\n                  setValue: setClientDistrict,\r\n                  type: 'text',\r\n                  width: '55%',\r\n                },\r\n                {\r\n                  label: 'Street',\r\n                  value: clientStreet,\r\n                  setValue: setClientStreet,\r\n                  type: 'text',\r\n                  width: '40%',\r\n                },\r\n                {\r\n                  label: 'Block',\r\n                  value: clientBlock,\r\n                  setValue: setClientBlock,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Floor',\r\n                  value: clientFloor,\r\n                  setValue: setClientFloor,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Unit',\r\n                  value: clientUnit,\r\n                  setValue: setClientUnit,\r\n                  type: 'text',\r\n                  width: '30%',\r\n                },\r\n                {\r\n                  label: 'Delivery Date',\r\n                  value: deliveryDate,\r\n                  setValue: setDeliveryDate,\r\n                  type: 'date',\r\n                  width: '100%',\r\n                  InputLabelProps: { shrink: true },\r\n                },\r\n                {\r\n                  label: 'Remark',\r\n                  value: remark,\r\n                  setValue: setRemark,\r\n                  type: 'text',\r\n                  width: '100%',\r\n                },\r\n              ].map((item, index) =>\r\n                item.label === 'Phone' ? (\r\n                  <MuiPhoneNumber\r\n                    key={index}\r\n                    defaultCountry={'hk'}\r\n                    value={item.value}\r\n                    onChange={(value) => {\r\n                      item.setValue(value);\r\n                    }}\r\n                    label={item.label}\r\n                    sx={{ flexBasis: item.width, minWidth: item.width }}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                  />\r\n                ) : (\r\n                  <TextField\r\n                    key={index}\r\n                    margin=\"dense\"\r\n                    label={item.label}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    value={item.value}\r\n                    type={item.type}\r\n                    onChange={(e) => {\r\n                      item.setValue(e.target.value);\r\n                    }}\r\n                    sx={{ flexBasis: item.width, minWidth: item.width }}\r\n                  />\r\n                )\r\n              )}\r\n            </Paper>\r\n            <TextField\r\n              label=\"QTY\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={QTY}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setQTY(e.target.value);\r\n              }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              setCreateOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCreate}>Create</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={whatsAppOpen}\r\n      >\r\n        <DialogTitle>Send WhatsApp Message to the Client</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <MuiPhoneNumber\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Phone Number\"\r\n              defaultCountry={'hk'}\r\n              value={clientPhone}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              inputRef={whatsAppMessage}\r\n              label=\"Message\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              defaultValue={`Hello ${clientName},\\nThank you for your order! Please find here (payment link URL) for your payment. Once finished, your order will be processed.\\nOnce finished, your order will be processed accordingly.`}\r\n              multiline\r\n              minRows={4}\r\n              maxRows={10}\r\n              // onChange={(e) => {\r\n              //   setWhatsAppMessage(e.target.value);\r\n              // }}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              setWhatsAppOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleWhatsAppSend}>Send</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        fullWidth\r\n        fullScreen={useMediaQuery(theme.breakpoints.down('sm'))}\r\n        maxWidth=\"sm\"\r\n        open={emailOpen}\r\n      >\r\n        <DialogTitle>Send Email to the Client</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <TextField\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={clientEmail}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              inputRef={emailContent}\r\n              label=\"Message\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              defaultValue={`Hello ${clientName},\\nThank you for your order! Please find here (payment link URL) for your payment. Once finished, your order will be processed.\\nOnce finished, your order will be processed accordingly.`}\r\n              multiline\r\n              minRows={4}\r\n              maxRows={10}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              setEmailOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleEmailSend}>Send</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Box, Toolbar } from '@mui/material';\r\nimport {\r\n  BookOnline as BookOnlineIcon,\r\n  Home as HomeIcon,\r\n} from '@mui/icons-material';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport AppHeader from 'components/Common/AppHeader';\r\nimport { CollapsedSidebar, FixedSidebar } from 'components/Common/Sidebar';\r\nimport { logout } from 'services/auth.service';\r\n\r\nimport { ChairOrder } from './Chair';\r\nimport { DeskOrder } from './Desk';\r\n\r\nfunction mapStateToProps(state) {\r\n  const { auth } = state;\r\n  return { auth };\r\n}\r\n\r\nconst drawerWidth = 240;\r\nconst drawerHeight = 50;\r\n\r\nconst menuLists = [\r\n  {\r\n    category: 'Chair',\r\n    content: [\r\n      { path: '/user/chair/order', icon: <BookOnlineIcon />, label: 'Order' },\r\n    ],\r\n  },\r\n  {\r\n    category: 'Desk',\r\n    content: [\r\n      { path: '/user/desk/order', icon: <BookOnlineIcon />, label: 'Order' },\r\n    ],\r\n  },\r\n];\r\n\r\nconst Standard = (props) => {\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const { path } = useRouteMatch();\r\n\r\n  const handleDrawerOpen = (e) => {\r\n    e.preventDefault();\r\n    setMobileOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = (e) => {\r\n    e.preventDefault();\r\n    setMobileOpen(false);\r\n  };\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'Log out will remove your session information permanently.',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Logout!',\r\n      cancelButtonText: 'No, Keep Login',\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        props.logout();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppHeader\r\n        drawerHeight={drawerHeight}\r\n        handleDrawerToggle={handleDrawerOpen}\r\n        title=\"Salesman\"\r\n      />\r\n      <Box\r\n        flexBasis={`calc(100% - ${drawerHeight}px)`}\r\n        maxHeight={`calc(100% - ${drawerHeight}px)`}\r\n        position=\"relative\"\r\n        display=\"flex\"\r\n        backgroundColor=\"#f4f5f7\"\r\n      >\r\n        <CollapsedSidebar\r\n          mobileOpen={mobileOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          drawerWidth={drawerWidth}\r\n          handleLogout={handleLogout}\r\n          lists={menuLists}\r\n        />\r\n        <FixedSidebar\r\n          drawerWidth={drawerWidth}\r\n          handleLogout={handleLogout}\r\n          lists={menuLists}\r\n        />\r\n        <Box\r\n          component=\"main\"\r\n          sx={{\r\n            flexGrow: 1,\r\n            p: 3,\r\n            width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n          }}\r\n        >\r\n          <Switch>\r\n            <Route path={`${path}/chair/order`} component={ChairOrder} />\r\n            <Route path={`${path}/desk/order`} component={DeskOrder} />\r\n          </Switch>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, { logout })(Standard);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AdminRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isLoggedIn === true ? (\r\n        auth.isAdmin === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/user\" />\r\n        )\r\n      ) : (\r\n        <Redirect to=\"/signin\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nAdminRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AdminRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GuestRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isLoggedIn === false ? (\r\n        <Component {...props} />\r\n      ) : auth.isAdmin === true ? (\r\n        <Redirect to=\"/admin\" />\r\n      ) : (\r\n        <Redirect to=\"/user\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nGuestRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(GuestRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isLoggedIn === true ? (\r\n        auth.isAdmin === false ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/admin\" />\r\n        )\r\n      ) : (\r\n        <Redirect to=\"/signin\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const auth = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    isLoggedIn: false,\r\n    isAdmin: false,\r\n    token: null,\r\n  },\r\n  reducers: {\r\n    loginSuccess: (state, action) => {\r\n      state.isLoggedIn = true;\r\n      state.token = action.payload.token;\r\n      state.isAdmin = action.payload.isAdmin;\r\n    },\r\n    loginFail: (state) => {\r\n      state.isLoggedIn = false;\r\n    },\r\n    logout: (state) => {\r\n      state.isLoggedIn = false;\r\n      state.isAdmin = false;\r\n      state.token = null;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { loginSuccess, loginFail, logout } = auth.actions;\r\n\r\nexport default auth.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counter = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = counter.actions;\r\n\r\nexport default counter.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport auth from './slice/auth.slice';\r\nimport counter from './slice/counter.slice';\r\n\r\nconst reducer = combineReducers({\r\n  auth,\r\n  counter,\r\n});\r\n\r\nconst preloadedState = localStorage.getItem('state')\r\n  ? JSON.parse(localStorage.getItem('state'))\r\n  : {};\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  preloadedState,\r\n});\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem('state', JSON.stringify(store.getState()));\r\n});\r\n\r\nexport default store;\r\n","import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { Container, CssBaseline } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\n\nimport { ChairInvoice, SignIn } from 'components/Guest';\nimport Admin from 'components/Admin';\nimport Standard from 'components/Standard';\nimport { AdminRoute, GuestRoute, PrivateRoute } from 'components/Common/Routes';\nimport store from 'store';\n\n// axios.defaults.baseURL = 'http://localhost:4000/api';\naxios.defaults.baseURL = 'http://97.74.83.170/api';\n\nif (store.getState().auth.isLoggedIn)\n  axios.defaults.headers.common['Authorization'] = `Bearer ${\n    store.getState().auth.token\n  }`;\n\nconst theme = createTheme();\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <CssBaseline />\n        <Container\n          maxWidth={false}\n          disableGutters\n          sx={{\n            height: '100vh',\n            overflow: 'auto',\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <BrowserRouter>\n            <Switch>\n              <Route path=\"/\" exact>\n                <Redirect to=\"/signin\" />\n              </Route>\n              <Route path=\"/chairinvoice/:id\" exact component={ChairInvoice} />\n              <GuestRoute path=\"/signin\" exact component={SignIn} />\n              <AdminRoute path=\"/admin\" component={Admin} />\n              <PrivateRoute path=\"/user\" component={Standard} />\n            </Switch>\n          </BrowserRouter>\n        </Container>\n      </Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}